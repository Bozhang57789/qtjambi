<?xml version="1.0"?>
<!--****************************************************************************
**
** Copyright (C) 2009-2020 Dr. Peter Droste, Omix Visualization GmbH & Co. KG. All rights reserved.
**
** This file is part of Qt Jambi.
**
** ** $BEGIN_LICENSE$
** Commercial Usage
** Licensees holding valid Qt Commercial licenses may use this file in
** accordance with the Qt Commercial License Agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and Nokia.
**
** GNU Lesser General Public License Usage
** This file may be used under the terms of the GNU Lesser
** General Public License version 2.1 as published by the Free Software
** Foundation and appearing in the file LICENSE.LGPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU Lesser General Public License version 2.1 requirements
** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
**
** In addition, as a special exception, Nokia gives you certain
** additional rights. These rights are described in the Nokia Qt LGPL
** Exception version 1.0, included in the file LGPL_EXCEPTION.txt in this
** package.
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU
** General Public License version 3.0 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU General Public License version 3.0 requirements will be
** met: http://www.gnu.org/copyleft/gpl.html.
**
** If you are unsure which license is appropriate for your use, please
** contact the sales department at qt-sales@nokia.com.
** $END_LICENSE$

**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************-->
<typesystem package="io.qt.test" default-superclass="io.qt.QtObject">
    <namespace-type name="QTest">
        <modify-function signature="qInit(QObject *, int, char **)">
           <modify-argument index="2">
                <remove-argument/>
                <conversion-rule class="native">
                    int %out = 0;
                </conversion-rule>
            </modify-argument>
           <modify-argument index="3">
                <remove-argument/>
                <conversion-rule class="native">
                    char ** %out = nullptr;
                </conversion-rule>
            </modify-argument>
        </modify-function>
        <modify-function signature="qExec(QObject *, int, char **)">
           <modify-argument index="2">
                <remove-argument/>
                <conversion-rule class="native">
                    int %out = 0;
                </conversion-rule>
            </modify-argument>
           <modify-argument index="3">
                <remove-argument/>
                <conversion-rule class="native">
                    char ** %out = nullptr;
                </conversion-rule>
            </modify-argument>
        </modify-function>
        <modify-function signature="currentTestFunction()">
            <modify-argument index="0">
                <replace-type modified-type="java.lang.String"/>
            </modify-argument>
        </modify-function>
        <modify-function signature="ignoreMessage(QtMsgType,const char *)">
            <modify-argument index="2">
                <replace-type modified-type="java.lang.String"/>
            </modify-argument>
        </modify-function>
        <modify-function signature="setMainSourcePath(const char *, const char *)">
            <modify-argument index="1">
                <replace-type modified-type="java.lang.String"/>
            </modify-argument>
            <modify-argument index="2">
                <replace-type modified-type="java.lang.String"/>
            </modify-argument>
        </modify-function>
        <modify-function signature="qFindTestData(const QString&amp;, const char*, int, const char*)">
            <modify-argument index="2">
                <replace-type modified-type="java.lang.String"/>
            </modify-argument>
            <modify-argument index="4">
                <replace-type modified-type="java.lang.String"/>
            </modify-argument>
        </modify-function>
        <modify-function signature="currentAppName()">
            <modify-argument index="return">
                <replace-type modified-type="java.lang.String"/>
            </modify-argument>
        </modify-function>
        <modify-function signature="currentDataTag()">
            <modify-argument index="return">
                <replace-type modified-type="java.lang.String"/>
            </modify-argument>
        </modify-function>
        <modify-function signature="currentTestFunction()">
            <modify-argument index="return">
                <replace-type modified-type="java.lang.String"/>
            </modify-argument>
        </modify-function>
    </namespace-type>
 </typesystem>
