<?xml version="1.0"?>
<!--****************************************************************************
**
** Copyright (C) 1992-2009 Nokia. All rights reserved.
** Copyright (C) 2009-2020 Dr. Peter Droste, Omix Visualization GmbH & Co. KG. All rights reserved.
**
** This file is part of Qt Jambi.
**
** ** $BEGIN_LICENSE$
** Commercial Usage
** Licensees holding valid Qt Commercial licenses may use this file in
** accordance with the Qt Commercial License Agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and Nokia.
**
** GNU Lesser General Public License Usage
** This file may be used under the terms of the GNU Lesser
** General Public License version 2.1 as published by the Free Software
** Foundation and appearing in the file LICENSE.LGPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU Lesser General Public License version 2.1 requirements
** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
**
** In addition, as a special exception, Nokia gives you certain
** additional rights. These rights are described in the Nokia Qt LGPL
** Exception version 1.0, included in the file LGPL_EXCEPTION.txt in this
** package.
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU
** General Public License version 3.0 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU General Public License version 3.0 requirements will be
** met: http://www.gnu.org/copyleft/gpl.html.
**
** If you are unsure which license is appropriate for your use, please
** contact the sales department at qt-sales@nokia.com.
** $END_LICENSE$

**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************-->
<typesystem qt-library="QtSql">
  <inject-code class="metainfo" position="2">
        void initialize_meta_info_QSqlRelationalDelegate();
  </inject-code>
  <inject-code class="metainfo" position="beginning">
        initialize_meta_info_QSqlRelationalDelegate();
  </inject-code>
  <rejection class="QSqlRelationalDelegate" />
  <rejection class="QSqlDriverCreator" />
  <rejection class="QSqlError::Unused" />

  <namespace-type name="QSql">
     <include file-name="qtsqlglobal.h" location="global" />
  </namespace-type>

  <object-type name="QSqlDriverPlugin">
        <modify-function signature="create(QString)">
            <modify-argument index="0">
                <define-ownership class="shell" owner="cplusplus"/>
                <define-ownership class="native" owner="java"/>
            </modify-argument>
        </modify-function>
        <inject-code class="metainfo" position="1">
        registerInterfaceID(typeId, QSqlDriverFactoryInterface_iid);
        </inject-code>
  </object-type>
  <interface-type name="QSqlDriverFactoryInterface" />
  <value-type name="QSqlDatabase">
    <extra-includes>
        <include file-name="QSqlQuery" location="global" />
        <include file-name="QSqlError" location="global" />
        <include file-name="QSqlIndex" location="global" />
        <include file-name="QSqlRecord" location="global" />
        <include file-name="QStringList" location="global" />
        <include file-name="QSize" location="global" />
    </extra-includes>
    <modify-function signature="operator=(QSqlDatabase)" remove="all"/>
  </value-type>

  <value-type name="QSqlQuery">
    <extra-includes>
        <include file-name="QSqlError" location="global" />
        <include file-name="QSqlRecord" location="global" />
        <include file-name="QStringList" location="global" />
        <include file-name="QSize" location="global" />
    </extra-includes>
    <modify-function signature="operator=(QSqlQuery)" remove="all"/>
  </value-type>

  <value-type name="QSqlRecord">
    <extra-includes>
        <include file-name="QSqlField" location="global" />
    </extra-includes>
    <modify-function signature="append(QSqlField)" access="non-final"/>
    <modify-function signature="operator=(QSqlRecord)" remove="all"/>
  </value-type>

  <value-type name="QSqlError">
    <modify-function signature="operator=(QSqlError)" remove="all"/>
  </value-type>

  <value-type name="QSqlIndex">
    <modify-function signature="operator=(QSqlIndex)" remove="all"/>
  </value-type>

  <value-type name="QSqlRelation" />

  <value-type name="QSqlField">
    <modify-function signature="operator=(QSqlField)" remove="all"/>
  </value-type>

  <object-type name="QSqlDriver">
    <extra-includes>
        <include file-name="QSqlQuery" location="global" />
        <include file-name="QSqlError" location="global" />
        <include file-name="QSqlIndex" location="global" />
        <include file-name="QSqlRecord" location="global" />
        <include file-name="QStringList" location="global" />
        <include file-name="QSize" location="global" />
    </extra-includes>
        <modify-function signature="createResult()const">
            <modify-argument index="0">
                <define-ownership class="shell" owner="cplusplus"/>
                <define-ownership class="native" owner="java"/>
            </modify-argument>
        </modify-function>
  </object-type>

  <object-type name="QSqlQueryModel">
    <modify-function signature="indexInQuery(QModelIndex)const" access="non-final"/>
    <modify-function signature="setQuery(QSqlQuery)" access="non-final"/>
    <modify-function signature="record()const" access="non-final"/>
    <modify-function signature="record(int)const" access="non-final"/>
    <extra-includes>
        <include file-name="QSqlError" location="global" />
        <include file-name="QSqlQuery" location="global" />
        <include file-name="QSqlRecord" location="global" />
        <include file-name="QStringList" location="global" />
        <include file-name="QSize" location="global" />
    </extra-includes>
  </object-type>
  <object-type name="QSqlRelationalTableModel">
    <extra-includes>
        <include file-name="QStringList" location="global" />
        <include file-name="QSize" location="global" />
    </extra-includes>
  </object-type>
  <object-type name="QSqlResult">
      <extra-includes>
        <include file-name="QSqlError" location="global" />
        <include file-name="QSqlQuery" location="global" />
        <include file-name="QSqlRecord" location="global" />
        <include file-name="QStringList" location="global" />
        <include file-name="QSize" location="global" />
      </extra-includes>
      <modify-function signature="virtual_hook(int,void*)">
        <remove />
      </modify-function>

  </object-type>
  <object-type name="QSqlTableModel">
    <extra-includes>
        <include file-name="QSqlIndex" location="global" />
        <include file-name="QStringList" location="global" />
        <include file-name="QSize" location="global" />
    </extra-includes>
  </object-type>
  <object-type name="QSqlDriverCreatorBase">
    <extra-includes>
        <include file-name="QSqlDriver" location="global" />
    </extra-includes>
        <modify-function signature="createObject()const">
            <modify-argument index="0">
                <define-ownership class="shell" owner="cplusplus"/>
                <define-ownership class="native" owner="java"/>
            </modify-argument>
        </modify-function>
  </object-type>

  <enum-type name="QSql::Location" />
  <enum-type name="QSql::ParamTypeFlag" flags="QSql::ParamType" />
  <enum-type name="QSql::TableType" />
  <enum-type name="QSql::NumericalPrecisionPolicy" />
  <enum-type name="QSqlDriver::DbmsType" />
  <enum-type name="QSqlDriver::DriverFeature" />
  <enum-type name="QSqlDriver::IdentifierType" />
  <enum-type name="QSqlDriver::StatementType" />
  <enum-type name="QSqlError::ErrorType" />
  <enum-type name="QSqlField::RequiredStatus" />
  <enum-type name="QSqlQuery::BatchExecutionMode"/>
  <enum-type name="QSqlResult::BindingSyntax" />
  <enum-type name="QSqlResult::VirtualHookOperation" />
  <enum-type name="QSqlTableModel::EditStrategy" />
  <enum-type name="QSqlDriver::NotificationSource" />
  <enum-type name="QSqlRelationalTableModel::JoinMode" /><!-- since 4.8 -->

  <suppress-warning text="WARNING(CppImplGenerator) :: protected function '*' in final class '*'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: visibility of function '*' modified in class '*'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: hiding of function '*' in class '*'" />

</typesystem>
