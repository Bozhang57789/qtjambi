<?xml version="1.0"?>
<!--****************************************************************************
**
** Copyright (C) 2019 Dr. Peter Droste, Omix Visualization GmbH & Co. KG. All rights reserved.
**
** This file is part of Qt Jambi.
**
** ** $BEGIN_LICENSE$
** Commercial Usage
** Licensees holding valid Qt Commercial licenses may use this file in
** accordance with the Qt Commercial License Agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and Nokia.
**
** GNU Lesser General Public License Usage
** This file may be used under the terms of the GNU Lesser
** General Public License version 2.1 as published by the Free Software
** Foundation and appearing in the file LICENSE.LGPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU Lesser General Public License version 2.1 requirements
** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
**
** In addition, as a special exception, Nokia gives you certain
** additional rights. These rights are described in the Nokia Qt LGPL
** Exception version 1.0, included in the file LGPL_EXCEPTION.txt in this
** package.
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU
** General Public License version 3.0 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU General Public License version 3.0 requirements will be
** met: http://www.gnu.org/copyleft/gpl.html.
**
** If you are unsure which license is appropriate for your use, please
** contact the sales department at qt-sales@nokia.com.
** $END_LICENSE$

**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************-->
<typesystem qt-library="QtStateMachine">
    <enum-type name="QHistoryState::HistoryType"/>
    <enum-type name="QState::ChildMode"/>
    <enum-type name="QState::RestorePolicy"/>
    <enum-type name="QStateMachine::Error"/>
    <enum-type name="QStateMachine::EventPriority"/>
    <object-type name="QAbstractState">
        <modify-function signature="onEntry(QEvent*)">
            <modify-argument index="1" invalidate-after-use="yes" />
        </modify-function>
        <modify-function signature="onExit(QEvent*)">
            <modify-argument index="1" invalidate-after-use="yes" />
        </modify-function>
    </object-type>
    <enum-type name="QAbstractTransition::TransitionType"/>
    <object-type name="QAbstractTransition">
        <modify-function signature="addAnimation(QAbstractAnimation*)">
            <modify-argument index="1">
                <reference-count action="add" variable-name="__rcAnimation" />
            </modify-argument>
        </modify-function>
        <modify-function signature="removeAnimation(QAbstractAnimation*)">
            <modify-argument index="1">
                <reference-count action="remove" variable-name="__rcAnimation" />
            </modify-argument>
        </modify-function>
        <modify-function signature="eventTest(QEvent*)">
            <modify-argument index="1" invalidate-after-use="yes" />
        </modify-function>
        <modify-function signature="onTransition(QEvent*)">
            <modify-argument index="1" invalidate-after-use="yes" />
        </modify-function>
        <modify-function signature="addAnimation(QAbstractAnimation *)" pp-condition="QT_CONFIG(animation)" />
        <modify-function signature="removeAnimation(QAbstractAnimation *)" pp-condition="QT_CONFIG(animation)" />
        <modify-function signature="animations() const" pp-condition="QT_CONFIG(animation)" />
    </object-type>
    <object-type name="QState">
        <modify-function signature="addTransition(QAbstractTransition*)">
            <modify-argument index="1">
                <no-null-pointer/>
                <reference-count action="ignore" />
            </modify-argument>
        </modify-function>
        <modify-function signature="removeTransition(QAbstractTransition*)">
            <modify-argument index="1">
                <reference-count action="ignore" />
            </modify-argument>
        </modify-function>
        <modify-function signature="setErrorState(QAbstractState*)">
            <modify-argument index="1">
                <reference-count action="set" variable-name="__rcErrorState" />
            </modify-argument>
        </modify-function>
        <modify-function signature="setInitialState(QAbstractState*)">
            <modify-argument index="1">
                <reference-count action="set" variable-name="__rcInitialState" />
            </modify-argument>
        </modify-function>
    </object-type>
    <object-type name="QStateMachine">
        <modify-function signature="beginMicrostep(QEvent*)">
            <modify-argument index="1" invalidate-after-use="yes" />
        </modify-function>
        <modify-function signature="beginSelectTransitions(QEvent*)">
            <modify-argument index="1" invalidate-after-use="yes" />
        </modify-function>
        <modify-function signature="endMicrostep(QEvent*)">
            <modify-argument index="1" invalidate-after-use="yes" />
        </modify-function>
        <modify-function signature="endSelectTransitions(QEvent*)">
            <modify-argument index="1" invalidate-after-use="yes" />
        </modify-function>
        <modify-function signature="addDefaultAnimation(QAbstractAnimation*)">
            <modify-argument index="1">
                <reference-count action="add" variable-name="__rcDefaultAnimations" />
            </modify-argument>
        </modify-function>
        <modify-function signature="removeDefaultAnimation(QAbstractAnimation*)">
            <modify-argument index="1">
                <reference-count action="remove" variable-name="__rcDefaultAnimations" />
            </modify-argument>
        </modify-function>
        <modify-function signature="addState(QAbstractState*)">
            <modify-argument index="1">
                <reference-count action="add" variable-name="__rcStates" />
            </modify-argument>
        </modify-function>
        <modify-function signature="removeState(QAbstractState*)">
            <modify-argument index="1">
                <reference-count action="remove" variable-name="__rcStates" />
            </modify-argument>
        </modify-function>
        <modify-function signature="eventFilter(QObject*,QEvent*)">
            <modify-argument index="2" invalidate-after-use="yes" />
        </modify-function>
    </object-type>
    <object-type name="QHistoryState">
        <modify-function signature="setDefaultTransition(QAbstractTransition*)">
            <modify-argument index="1">
                <reference-count action="ignore" />
            </modify-argument>
        </modify-function>
    </object-type>
    <object-type name="QSignalTransition">
        <modify-function signature="setSenderObject(const QObject*)">
            <modify-argument index="1">
                <reference-count action="set" variable-name="__rcSenderObject" />
            </modify-argument>
        </modify-function>
    </object-type>
    <object-type name="QKeyEventTransition">
    </object-type>
    <object-type name="QMouseEventTransition">
    </object-type>
    <object-type name="QEventTransition">
        <modify-function signature="setEventSource(QObject*)">
            <modify-argument index="1">
                <reference-count action="set" variable-name="__rcEventSource" />
            </modify-argument>
        </modify-function>
    </object-type>
    <object-type name="QFinalState"/>
    <object-type name="QStateMachine::SignalEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::StateMachineSignal"/>
    <object-type name="QStateMachine::WrappedEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::StateMachineWrapped"/>
</typesystem>
