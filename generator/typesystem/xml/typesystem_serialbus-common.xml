<?xml version="1.0"?>
<!--****************************************************************************
**
** Copyright (C) 1992-2009 Nokia. All rights reserved.
** Copyright (C) 2009-2020 Dr. Peter Droste, Omix Visualization GmbH & Co. KG. All rights reserved.
**
** This file is part of Qt Jambi.
**
** ** $BEGIN_LICENSE$
** Commercial Usage
** Licensees holding valid Qt Commercial licenses may use this file in
** accordance with the Qt Commercial License Agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and Nokia.
**
** GNU Lesser General Public License Usage
** This file may be used under the terms of the GNU Lesser
** General Public License version 2.1 as published by the Free Software
** Foundation and appearing in the file LICENSE.LGPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU Lesser General Public License version 2.1 requirements
** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
**
** In addition, as a special exception, Nokia gives you certain
** additional rights. These rights are described in the Nokia Qt LGPL
** Exception version 1.0, included in the file LGPL_EXCEPTION.txt in this
** package.
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU
** General Public License version 3.0 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU General Public License version 3.0 requirements will be
** met: http://www.gnu.org/copyleft/gpl.html.
**
** If you are unsure which license is appropriate for your use, please
** contact the sales department at qt-sales@nokia.com.
** $END_LICENSE$

**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************-->
<typesystem qt-library="QtSerialBus">
    <rejection class="QModbusPdu::IsType"/>
    <object-type name="QModbusClient">
    </object-type>
    <object-type name="QCanBus">
    </object-type>
    <enum-type name="QCanBusDevice::CanBusDeviceState"/>
    <enum-type name="QCanBusDevice::CanBusError"/>
    <enum-type name="QCanBusDevice::CanBusStatus"/>
    <enum-type name="QCanBusDevice::ConfigurationKey"/>
    <enum-type name="QCanBusDevice::Direction" flags="QCanBusDevice::Directions"/>
    <object-type name="QCanBusDevice">
    </object-type>
    <enum-type name="QCanBusDevice::Filter::FormatFilter" flags="QCanBusDevice::Filter::FormatFilters"/>
    <value-type name="QCanBusDevice::Filter">
    </value-type>
    <value-type name="QCanBusDeviceInfo">
        <custom-constructor>
            if(copy){
                return new(placement) QCanBusDeviceInfo(*copy);
            }else{
                return nullptr;
            }
        </custom-constructor>
        <modify-function signature="operator=(const QCanBusDeviceInfo &amp;)" remove="all"/>
    </value-type>
    <interface-type name="QCanBusFactory"/>
    <interface-type name="QCanBusFactoryV2"/>
    <enum-type name="QCanBusFrame::FrameError" flags="QCanBusFrame::FrameErrors"/>
    <enum-type name="QCanBusFrame::FrameType"/>
    <value-type name="QCanBusFrame">
    </value-type>
    <value-type name="QCanBusFrame::TimeStamp">
    </value-type>
    <enum-type name="QModbusDataUnit::RegisterType"/>
    <value-type name="QModbusDataUnit">
    </value-type>
    <enum-type name="QModbusDevice::ConnectionParameter"/>
    <enum-type name="QModbusDevice::Error"/>
    <enum-type name="QModbusDevice::State"/>
    <object-type name="QModbusDevice">
    </object-type>
    <enum-type name="QModbusDeviceIdentification::ConformityLevel"/>
    <enum-type name="QModbusDeviceIdentification::ObjectId"/>
    <enum-type name="QModbusDeviceIdentification::ReadDeviceIdCode"/>
    <value-type name="QModbusDeviceIdentification">
    </value-type>
    <enum-type name="QModbusPdu::ExceptionCode"/>
    <enum-type name="QModbusPdu::FunctionCode"/>
    <value-type name="QModbusPdu" polymorphic-base="yes" polymorphic-id-expression="typeid(*%1) == typeid(QModbusPdu)">
        <custom-constructor>
            QModbusPdu* clone = new(placement) QModbusPdu();
            if(copy){
                struct ModbusPdu{
                    QModbusPdu::FunctionCode m_code;
                    QByteArray m_data;
                };
                clone->setData(copy->data());
                reinterpret_cast&lt;ModbusPdu*>(clone)->m_code = reinterpret_cast&lt;const ModbusPdu*>(copy)->m_code;
            }
            return clone;
        </custom-constructor>
        <modify-function signature="operator=(const QModbusPdu &amp;)" remove="all"/>
        <modify-function signature="operator&lt;&lt;(QDataStream &amp;)" access="non-final"/>
    </value-type>
    <functional-type name="QModbusRequestCalculatorFunction">
        <extra-includes>
            <include file-name="qtjambi_serialbus_qhashes.h" location="local"/>
        </extra-includes>
    </functional-type>
    <functional-type name="QModbusResponseCalculatorFunction">
        <extra-includes>
            <include file-name="qtjambi_serialbus_qhashes.h" location="local"/>
        </extra-includes>
    </functional-type>
    <functional-type name="QModbusRequest::CalcFuncPtr" generate="no"/>
    <functional-type name="QModbusResponse::CalcFuncPtr" generate="no"/>
    <value-type name="QModbusRequest" polymorphic-id-expression="typeid(*%1) == typeid(QModbusRequest)">
    </value-type>
    <value-type name="QModbusResponse" polymorphic-id-expression="typeid(*%1) == typeid(QModbusResponse)">
    </value-type>
    <value-type name="QModbusExceptionResponse" polymorphic-id-expression="typeid(*%1) == typeid(QModbusExceptionResponse)">
    </value-type>
    <enum-type name="QModbusReply::ReplyType"/>
    <object-type name="QModbusReply">
    </object-type>
    <object-type name="QModbusRtuSerialMaster">
    </object-type>
    <object-type name="QModbusRtuSerialSlave">
    </object-type>
    <enum-type name="QModbusServer::Option"/>
    <object-type name="QModbusServer">
    </object-type>
    <object-type name="QModbusTcpClient">
        <extra-includes>
            <include file-name="qtcpsocket.h" location="global" suppressed="yes"/>
            <include file-name="qtjambi_serialbus.h" location="local"/>
        </extra-includes>
    </object-type>
    <object-type name="QModbusTcpServer">
        <extra-includes>
            <include file-name="qtcpsocket.h" location="global" suppressed="yes"/>
            <include file-name="qtjambi_serialbus.h" location="local"/>
        </extra-includes>
    </object-type>
    <interface-type name="QModbusTcpConnectionObserver">
        <extra-includes>
            <include file-name="qtcpsocket.h" location="global" suppressed="yes"/>
            <include file-name="qtjambi_serialbus.h" location="local"/>
        </extra-includes>
    </interface-type>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: function '*::CalcFuncPtr' is specified in typesystem, but not declared" />
</typesystem>
