<?xml version="1.0"?>
<!--****************************************************************************
**
** Copyright (C) 1992-2009 Nokia. All rights reserved.
** Copyright (C) 2009-2022 Dr. Peter Droste, Omix Visualization GmbH & Co. KG. All rights reserved.
**
** This file is part of Qt Jambi.
**
** ** $BEGIN_LICENSE$
** Commercial Usage
** Licensees holding valid Qt Commercial licenses may use this file in
** accordance with the Qt Commercial License Agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and Nokia.
**
** GNU Lesser General Public License Usage
** This file may be used under the terms of the GNU Lesser
** General Public License version 2.1 as published by the Free Software
** Foundation and appearing in the file LICENSE.LGPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU Lesser General Public License version 2.1 requirements
** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
**
** In addition, as a special exception, Nokia gives you certain
** additional rights. These rights are described in the Nokia Qt LGPL
** Exception version 1.0, included in the file LGPL_EXCEPTION.txt in this
** package.
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU
** General Public License version 3.0 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU General Public License version 3.0 requirements will be
** met: http://www.gnu.org/copyleft/gpl.html.
**
** If you are unsure which license is appropriate for your use, please
** contact the sales department at qt-sales@nokia.com.
** $END_LICENSE$

**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************-->
<typesystem package="io.qt.svg" module="qtjambi.svg" default-superclass="io.qt.QtObject">
    <object-type name="QGraphicsSvgItem" until="5.*">
        <!--<modify-function signature="setGroup(QGraphicsItemGroup*)">
            <modify-argument index="1">-->
                <!-- Handled by injected code in QGraphicsItem -->
                <!--<reference-count action="ignore" />
            </modify-argument>
        </modify-function>
        <modify-function signature="setParentItem(QGraphicsItem*)">
            <modify-argument index="1">-->
                <!-- Handled by injected code in QGraphicsItem -->
                <!--<reference-count action="ignore" />
            </modify-argument>
        </modify-function>-->
        <modify-function signature="setSharedRenderer(QSvgRenderer*)">
            <modify-argument index="1">
                <define-ownership class="native" owner="cplusplus" />
            </modify-argument>
            <inject-code position="beginning">
                QSvgRenderer oldRenderer = renderer();
            </inject-code>
            <inject-code position="end">
            if (oldRenderer != null)
                QtJambi_LibraryUtilities.internal.setDefaultOwnership(oldRenderer);
            </inject-code>
        </modify-function>
        <modify-function signature="QGraphicsSvgItem(QGraphicsItem*)">
            <inject-code position="end">
                <argument-map index="1" meta-name="%1" />
            if (%1 != null) QtJambi_LibraryUtilities.internal.setCppOwnership(this);
            </inject-code>
        </modify-function>
        <modify-function signature="QGraphicsSvgItem(const QString &amp;,QGraphicsItem*)">
            <inject-code position="end">
                <argument-map index="2" meta-name="%2" />
            if (%2 != null) QtJambi_LibraryUtilities.internal.setCppOwnership(this);
            </inject-code>
        </modify-function>

    </object-type>

    <suppress-warning text="WARNING(CppImplGenerator) :: protected function '*' in final class '*'" />
    <suppress-warning text="WARNING(MetaJavaBuilder) :: visibility of function '*' modified in class '*'" />
    <suppress-warning text="WARNING(MetaJavaBuilder) :: hiding of function '*' in class '*'" />
</typesystem>
