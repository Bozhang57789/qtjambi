<project name="qtjambi.bundle" default="library.native.bundle">

  <!--
      ************************************************************
      Library Compilation etc ...
      ************************************************************
  -->

  <!-- 
      Runs qmake for Jambi source
  -->
  <target name="library.native.qmake" depends="init.build" description="Runs qmake on the Qt Jambi native library">
      <mkdir dir="${qtjambi.builddir}"/>
      <qmake recursive="true"
          dir="${qtjambi.builddir}"
          pro="${basedir}/src/cpp/qtjambi.pro"
          config="${qtjambi.configuration} ${qtjambi.config.jumptable}"
          qtconfig="${qtjambi.qtconfig}"
          debugTools="${qtjambi.debug-tools}"
          qmakebinary="${qtjambi.qt.qmake.abspath}"/>
  </target>

  <!--
      Runs make for Jambi source
  -->
  <target name="library.native.compile" depends="library.native.qmake" description="Compiles the C++ Qt Jambi library">
      <make dir="${qtjambi.builddir}" target="${qtjambi.qmake.target.default}"/>
  </target>

  <target name="library.native.bundle" depends="init.build" description="Creates a .jar file file containing native libraries.">
      <if>
        <equals arg1="${qtjambi.configuration}" arg2="debug_and_release" />
        <then>
            <antcall target="library.native.bundle.release"/>
            <antcall target="library.native.bundle.debug"/>
        </then>
      </if>

      <if>
        <equals arg1="${qtjambi.configuration}" arg2="release" />
        <then>
            <antcall target="library.native.bundle.release"/>
        </then>
      </if>

      <if>
        <equals arg1="${qtjambi.configuration}" arg2="test" />
        <then>
            <antcall target="library.native.bundle.release"/>
        </then>
      </if>

      <if>
        <equals arg1="${qtjambi.configuration}" arg2="debug" />
        <then>
            <antcall target="library.native.bundle.debug"/>
        </then>
      </if>
  </target>

  <target name="library.native.bundle.release" description="Creates a .jar file file containing native libraries.">
    <antcall target="library.native.bundle.platformjar">
        <param name="platformjar.debug" value="false"/>
        <param name="platformjar.debug.suffix" value=""/>
        <param name="platformjar.debug.suffix2" value=""/>
        <param name="platformjar.conf" value="release"/>
    </antcall>
  </target>

  <target name="library.native.bundle.debug" description="Creates a .jar file file containing native libraries.">
    <antcall target="library.native.bundle.platformjar">
        <param name="platformjar.debug" value="true"/>
        <param name="platformjar.debug.suffix" value="-debug"/>
        <param name="platformjar.debug.suffix2" value="_debug"/>
        <param name="platformjar.conf" value="debug"/>
    </antcall>
  </target>
  
  <target name="library.native.bundle.platformjar">
    <condition property="qsqljdbc.true" value="true" else="false">
        <and>
            <available file="${jardir}/plugins/qtjambi/qsqljdbc.jar"/>
        </and>
    </condition>
    <qtjambi-platform-jar cacheKey="${qtjambi.version.cachekey}"
                          outdir="${outputDir}/platform-output${platformjar.debug.suffix}"
                          debug="${platformjar.debug}">
        <!--directory name="" rootPath="${qtjambi.macosx.qtmenunib.dir}" destSubdir="lib" recursive="true" if="${qtjambi.config.ismacosx}"/-->
        <!-- Qt Libraries -->
        <library name="QtCore"                    dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.core"/>
        <library name="QtGui"                     dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.gui"/>
        <library name="QtConcurrent"              dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.concurrent"/>
        <library name="QtXml"                     dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.xml"/>
        <library name="QtScxml"                   dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.scxml"/>
        <library name="QtRemoteObjects"           dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.remoteobjects"/>
        <library name="QtSql"                     dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.sql"/>
        <library name="QtSvg"                     dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.svg"/>
        <library name="QtNetwork"                 dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.network"/>
        <library name="QtNetworkAuth"             dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.networkauth"/>
        <library name="QtHelp"                    dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.help"/>
        <library name="QtScript"                  dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.script"/>
        <library name="QtScriptTools"             dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.scripttools"/>
        <library name="QtMultimedia"              dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.multimedia"/>
        <library name="QtOpenGL"                  dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.opengl"/>
        <library name="QtXmlPatterns"             dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.xmlpatterns"/>
        <library name="QtDesigner"                dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.designer"/>
        <library name="QtDesignerComponents"      dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.designercomponents"/>
        <library name="QtCLucene"                 dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.clucene"/>
        <library name="QtDBus"                    dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.dbus"/>
        <library name="QtTest"                    dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.test"/>
        <library name="QtWidgets"                 dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.widgets"/>
        <library name="QtBluetooth"               dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.bluetooth"/>
        <library name="QtLocation"                dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.location"/>
        <library name="QtMultimediaQuick"         dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.multimediaquick"/>
        <library name="QtMultimediaGstTools"      dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.multimediagsttools"/>
        <library name="QtMultimediaWidgets"       dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.multimediawidgets"/>
        <library name="QtOpenGL"                  dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.multimediawidgets.opengl"/>
        <library name="QtNfc"                     dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.nfc"/>
        <library name="QtPurchasing"              dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.purchasing"/>
        <library name="QtPositioning"             dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.positioning"/>
        <library name="QtPositioningQuick"        dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.positioningquick"/>
        <library name="QtQml"                     dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.qml"/>
        <library name="QtQmlModels"               dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.qmlmodels"/>
        <library name="QtQmlWorkerScript"         dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.qmlworkerscript"/>
        <library name="QtQuick"                   dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.quick"/>
        <library name="QtQuickControls2"          dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.quickcontrols2"/>
        <library name="QtQuickTemplates2"         dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.quicktemplates2"/>
        <library name="QtPrintSupport"            dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.printsupport"/>
        <library name="QtQuickParticles"          dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.quickparticles"/>
        <library name="QtQuickTest"               dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.quicktest"/>
        <library name="QtQuickWidgets"            dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.quickwidgets"/>
        <library name="QtQuickShapes"             dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.quickshapes"/>
        <library name="QtSensors"                 dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.sensors"/>
        <library name="QtSerialPort"              dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.serialport"/>
        <library name="QtSerialus"                dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.serialbus"/>
        <library name="QtWebChannel"              dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.webchannel"/>
        <library name="QtWebSockets"              dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.websockets"/>
        <library name="QtWebView"                 dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.webview"/>
        <library name="QtWebEngineWidgets"        dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.webenginewidgets"/>
        <library name="QtWebEngineCore"           dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.webenginecore"/>
        <library name="QtWebEngine"               dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.webengine"/>
        <library name="QtWinExtras"               dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.winextras"/>
        <library name="QtMacExtras"               dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.macextras"/>
        <library name="QtX11Extras"               dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.x11extras"/>
        <library name="Qt3DCore"                  dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.qt3dcore"/>
        <library name="Qt3DInput"                 dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.qt3dinput"/>
        <library name="Qt3DQuick"                 dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.qt3dquick"/>
        <library name="Qt3DQuickInput"            dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.qt3dquickinput"/>
        <library name="Qt3DQuickRenderer"         dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.qt3dquickrenderer"/>
        <library name="Qt3DExtras"                dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.qt3dextras"/>
        <library name="Qt3DQuickExtras"           dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.qt3dquickextras"/>
        <library name="Qt3DQuickRender"           dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.qt3dquickrender"/>
        <library name="Qt3DQuickScene2D"          dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.qt3dquickscene2d"/>
        <library name="Qt3DRenderer"              dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.qt3drenderer"/>
        <library name="Qt3DRender"                dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.qt3drender"/>
        <library name="Qt3DLogic"                 dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.qt3dlogic"/>
        <library name="Qt3DAnimation"             dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.qt3danimation"/>
        <library name="QtQuick3D"                 dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.quick3d"/>
        <library name="QtQuick3DRuntimeRender"    dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.quick3druntimerender"/>
        <library name="Qt5Quick3DUtils"           dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.quick3dutils"/>
        <library name="QtQuick3DRender"           dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.quick3drender"/>
        <library name="QtQuick3DAssetImport"      dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.quick3dassetimport"/>
        <library name="QtOpenGLExtensions"        dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.openglextensions"/>
        <library name="QtPlatformSupport"         dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.platformsupport"/>
        <library name="QtEglDeviceIntegration"    dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.egldeviceintegration"/>
        <library name="QtEglFSDeviceIntegration"  dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.eglfsdeviceintegration"/>
        <library name="QtEglFsKmsSupport"         dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.eglfskmssupport"/>
        <library name="QtWaylandClient"           dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.waylandclient"/>
        <library name="QtWaylandCompositor"       dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.waylandcompositor"/>
        <library name="QtGamepad"                 dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.gamepad"/>
        <library name="QtXcbQpa"                  dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.xcbqpa"/>
        <library name="QtLabsTemplates"           dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.labstemplates"/>
        <library name="QtTextToSpeech"            dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.texttospeech"/>
        <library name="Qt3DQuickAnimation"        dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.3dquickanimation"/>
        <library name="QtANGLE"                   dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.angle"/>
        <library name="QtBodymovin"               dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.bodymovin"/>
        <library name="libEGL"                    dsoVersion=""  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.libegl"/>
        <library name="libGLESv2"                 dsoVersion=""  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.libglesv2"/>
        <library name="d3dcompiler_47"            dsoVersion=""  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.d3dcompiler_47"/>
        <library name="opengl32sw"                dsoVersion=""  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.opengl32sw"/>
        <library name="libicudata"                dsoVersion="56"  type="dso"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.libicudata"/>
        <library name="libicuuc"                  dsoVersion="56"  type="dso"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.libicuuc"/>
        <library name="libicui18n"                dsoVersion="56"  type="dso"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="qtjambi.libicui18n"/>
        <library name="jarimport"                 dsoVersion="" type="dso" rootPath="${qtjambi.jambi.libdir}" destSubdir="qml/QtJambi" if="qtjambi.qml.true"/>

        <!-- QtJambi Libraries -->
        <library name="QtJambi"                   dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.core.true"/>
        <library name="QtJambiCore"               dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.core.true"/>
        <library name="QtJambiBluetooth"          dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.bluetooth.true"/>
        <library name="QtJambiConcurrent"         dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.concurrent.true"/>
        <library name="QtJambiLocation"           dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.location.true"/>
        <library name="QtJambiPositioning"        dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.positioning.true"/>
        <library name="QtJambiGui"                dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.gui.true"/>
        <library name="QtJambiXml"                dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.xml.true"/>
        <library name="QtJambiScxml"              dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.scxml.true"/>
        <library name="QtJambiRemoteObjects"      dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.remoteobjects.true"/>
        <library name="QtJambiSql"                dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.sql.true"/>
        <library name="QtJambiHelp"               dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.help.true"/>
        <library name="QtJambiNfc"                dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.nfc.true"/>
        <library name="QtJambiPurchasing"         dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.purchasing.true"/>
        <library name="QtJambiScript"             dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.script.true"/>
        <library name="QtJambiScriptTools"        dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.scripttools.true"/>
        <library name="QtJambiMultimedia"         dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.multimedia.true"/>
        <library name="QtJambiMultimediaWidgets"  dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.multimediawidgets.true"/>
        <library name="QtJambiSvg"                dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.svg.true"/>
        <library name="QtJambiPrintSupport"       dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.printsupport.true"/>
        <library name="QtJambiNetwork"            dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.network.true"/>
        <library name="QtJambiNetworkAuth"        dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.networkauth.true"/>
        <library name="QtJambiXmlPatterns"        dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.xmlpatterns.true"/>
        <library name="QtJambiDBus"               dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.dbus.true"/>
        <library name="QtJambiTest"               dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.test.true"/>
        <library name="QtJambiWidgets"            dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.widgets.true"/>
        <library name="QtJambiWebSockets"         dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.websockets.true"/>
        <library name="QtJambiGamepad"            dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.gamepad.true"/>
        <library name="QtJambiWebChannel"         dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.webchannel.true"/>
        <library name="QtJambiWebEngine"          dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.webengine.true"/>
        <library name="QtJambiWebEngineCore"      dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.webenginecore.true"/>
        <library name="QtJambiWebEngineWidgets"   dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.webenginewidgets.true"/>
        <library name="QtJambiWebView"            dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.webview.true"/>
        <library name="QtJambiQml"                dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.qml.true"/>
        <library name="QtJambiQuick"              dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.quick.true"/>
        <library name="QtJambiQuickControls2"     dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.quickcontrols2.true"/>
        <library name="QtJambiQuickWidgets"       dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.quickwidgets.true"/>
        <library name="QtJambiWinExtras"          dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.winextras.true"/>
        <library name="QtJambiMacExtras"          dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.macextras.true"/>
        <library name="QtJambiX11Extras"          dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.x11extras.true"/>
        <library name="QtJambiSerialPort"         dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.serialport.true"/>
        <library name="QtJambiSerialBus"          dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.serialbus.true"/>
        <library name="QtJambiSensors"            dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.sensors.true"/>
        <library name="QtJambi3DCore"             dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.qt3dcore.true"/>
        <library name="QtJambi3DQuick"            dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.qt3dquick.true"/>
        <library name="QtJambi3DExtras"           dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.qt3dextras.true"/>
        <library name="QtJambi3DQuickExtras"      dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.qt3dquickextras.true"/>
        <library name="QtJambi3DInput"            dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.qt3dinput.true"/>
        <library name="QtJambi3DQuickScene2D"     dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.qt3dquickscene2d.true"/>
        <library name="QtJambi3DRender"           dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.qt3drender.true"/>
        <library name="QtJambi3DAnimation"        dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.qt3danimation.true"/>
        <library name="QtJambi3DLogic"            dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="qtjambi.qt3dlogic.true"/>

        <!-- QtJambi Plugins -->
        <library name="qsqljdbc"                  load="never" type="plugin-jar"   rootPath="${jardir}/plugins" subdir="qtjambi" destSubdir="plugins" if="qsqljdbc.true"/>

        <!-- Qt Plugins -->
        <library name="qtaccessiblewidgets"       load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="accessible" destSubdir="plugins" if="qtjambi.plugins.accessible.qtaccessiblewidgets"/>

        <library name="qconnmanbearer"            load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="bearer" destSubdir="plugins" if="qtjambi.plugins.bearer.connmanbearer"/>
        <library name="qgenericbearer"            load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="bearer" destSubdir="plugins" if="qtjambi.plugins.bearer.genericbearer"/>
        <library name="qnativewifibearer"         load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="bearer" destSubdir="plugins" if="qtjambi.plugins.bearer.nativewifibearer"/>
        <library name="qnmbearer"                 load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="bearer" destSubdir="plugins" if="qtjambi.plugins.bearer.nmbearer"/>

        <library name="qglgraphicssystem"         load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="graphicssystems" destSubdir="plugins" if="qtjambi.plugins.graphicssystems.glgraphicssystem"/>
        <library name="qtracegraphicssystem"      load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="graphicssystems" destSubdir="plugins" if="qtjambi.plugins.graphicssystems.tracegraphicssystem"/>

        <library name="qsvgicon"                  load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="iconengines" destSubdir="plugins" if="qtjambi.plugins.iconengines.svgicon"/>

        <library name="qgif"                      load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="imageformats" destSubdir="plugins" if="qtjambi.plugins.imageformats.gif"/>
        <library name="qicns"                     load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="imageformats" destSubdir="plugins" if="qtjambi.plugins.imageformats.qicns"/>
        <library name="qico"                      load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="imageformats" destSubdir="plugins" if="qtjambi.plugins.imageformats.ico"/>
        <library name="qjpeg"                     load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="imageformats" destSubdir="plugins" if="qtjambi.plugins.imageformats.jpeg"/>
        <library name="qmng"                      load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="imageformats" destSubdir="plugins" if="qtjambi.plugins.imageformats.mng"/>
        <library name="qpng"                      load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="imageformats" destSubdir="plugins" if="qtjambi.plugins.imageformats.png"/>
        <library name="qsvg"                      load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="imageformats" destSubdir="plugins" if="qtjambi.plugins.imageformats.svg"/>
        <library name="qtiff"                     load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="imageformats" destSubdir="plugins" if="qtjambi.plugins.imageformats.tiff"/>
        <library name="qmacheif"                  load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="imageformats" destSubdir="plugins" if="qtjambi.plugins.imageformats.qmacheif"/>
        <library name="qmacjp2"                   load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="imageformats" destSubdir="plugins" if="qtjambi.plugins.imageformats.qmacjp2"/>
        <library name="qwbmp"                     load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="imageformats" destSubdir="plugins" if="qtjambi.plugins.imageformats.qwbmp"/>
        <library name="qjp2"                      load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="imageformats" destSubdir="plugins" if="qtjambi.plugins.imageformats.qjp2"/>
        <library name="qicns"                     load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="imageformats" destSubdir="plugins" if="qtjambi.plugins.imageformats.qicns"/>
        <library name="qdds"                      load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="imageformats" destSubdir="plugins" if="qtjambi.plugins.imageformats.qdds"/>
        <library name="qtga"                      load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="imageformats" destSubdir="plugins" if="qtjambi.plugins.imageformats.qtga"/>
        <library name="qwbmp"                     load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="imageformats" destSubdir="plugins" if="qtjambi.plugins.imageformats.qwbmp"/>
        <library name="qwebp"                     load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="imageformats" destSubdir="plugins" if="qtjambi.plugins.imageformats.qwebp"/>

        <library name="qimsw-multi"               load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="inputmethods" destSubdir="plugins" if="qtjambi.plugins.inputmethods.imsw-multi"/>

        <!-- Unicode codecs -->
        <library name="qcncodecs"                 load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="codecs"     destSubdir="plugins" if="qtjambi.plugins.codecs.cncodecs"/>
        <library name="qjpcodecs"                 load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="codecs"     destSubdir="plugins" if="qtjambi.plugins.codecs.jpcodecs"/>
        <library name="qkrcodecs"                 load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="codecs"     destSubdir="plugins" if="qtjambi.plugins.codecs.krcodecs"/>
        <library name="qtwcodecs"                 load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="codecs"     destSubdir="plugins" if="qtjambi.plugins.codecs.twcodecs"/>

        <library name="qmldbg_tcp"                load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="qmltooling" destSubdir="plugins" if="qtjambi.plugins.qmltooling.qmldbg_tcp"/>
        <library name="qsceneai"                  load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="sceneformats" destSubdir="plugins" if="qtjambi.plugins.sceneformats.qsceneai"/>
        <library name="qscenebezier"              load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="sceneformats" destSubdir="plugins" if="qtjambi.plugins.sceneformats.qscenebezier"/>
        <library name="qsceneobj"                 load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="sceneformats" destSubdir="plugins" if="qtjambi.plugins.sceneformats.qsceneobj"/>

        <library name="qtscriptdbus"              load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="script"     destSubdir="plugins" if="qtjambi.plugins.script.qtscriptdbus"/>

        <library name="qsqlite"                   load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="sqldrivers" destSubdir="plugins" if="qtjambi.plugins.sqldrivers.sqlite"/>
        <library name="qsqlite2"                  load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="sqldrivers" destSubdir="plugins" if="qtjambi.plugins.sqldrivers.sqlite2"/>
        <library name="qsqlmysql"                 load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="sqldrivers" destSubdir="plugins" if="qtjambi.plugins.sqldrivers.sqlmysql"/>
        <library name="qsqlodbc"                  load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="sqldrivers" destSubdir="plugins" if="qtjambi.plugins.sqldrivers.sqlodbc"/>
        <library name="qsqlpsql"                  load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="sqldrivers" destSubdir="plugins" if="qtjambi.plugins.sqldrivers.sqlpsql"/>
        <library name="qsqltds"                   load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="sqldrivers" destSubdir="plugins" if="qtjambi.plugins.sqldrivers.sqltds"/>

        <library name="qtaudio_windows"                load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="audio"      destSubdir="plugins" if="qtjambi.plugins.audio.qtaudio_windows"/>
        <library name="qtaudio_alsa"                   load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="audio"      destSubdir="plugins" if="qtjambi.plugins.audio.qtaudio_alsa"/>
        <library name="qtaudio_coreaudio"              load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="audio"      destSubdir="plugins" if="qtjambi.plugins.audio.qtaudio_coreaudio"/>
        <library name="qtmedia_pulse"                  load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="audio"      destSubdir="plugins" if="qtjambi.plugins.audio.qtmedia_pulse"/>
        <library name="qtuiotouchplugin"               load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="generic"      destSubdir="plugins" if="qtjambi.plugins.generic.qtuiotouchplugin"/>
        <library name="dsengine"                       load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="mediaservice" destSubdir="plugins" if="qtjambi.plugins.mediaservice.dsengine"/>
        <library name="qtmedia_audioengine"            load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="mediaservice" destSubdir="plugins" if="qtjambi.plugins.mediaservice.qtmedia_audioengine"/>
        <library name="wmfengine"                      load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="mediaservice" destSubdir="plugins" if="qtjambi.plugins.mediaservice.wmfengine"/>
        <library name="gstaudiodecoder"                load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="mediaservice" destSubdir="plugins" if="qtjambi.plugins.mediaservice.gstaudiodecoder"/>
        <library name="gstcamerabin"                   load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="mediaservice" destSubdir="plugins" if="qtjambi.plugins.mediaservice.gstcamerabin"/>
        <library name="gstmediacapture"                load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="mediaservice" destSubdir="plugins" if="qtjambi.plugins.mediaservice.gstmediacapture"/>
        <library name="gstmediaplayer"                 load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="mediaservice" destSubdir="plugins" if="qtjambi.plugins.mediaservice.gstmediaplayer"/>
        <library name="qavfmediaplayer"                load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="mediaservice" destSubdir="plugins" if="qtjambi.plugins.mediaservice.qavfmediaplayer"/>
        <library name="qavfcamera"                     load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="mediaservice" destSubdir="plugins" if="qtjambi.plugins.mediaservice.qavfcamera"/>
        <library name="qminimal"                       load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="platforms" destSubdir="plugins" if="qtjambi.plugins.platforms.qminimal"/>
        <library name="qoffscreen"                     load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="platforms" destSubdir="plugins" if="qtjambi.plugins.platforms.qoffscreen"/>
        <library name="qwindows"                       load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="platforms" destSubdir="plugins" if="qtjambi.plugins.platforms.qwindows"/>
        <library name="qcocoa"                         load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="platforms" destSubdir="plugins" if="qtjambi.plugins.platforms.qcocoa"/>
        <library name="qeglfs"                         load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="platforms" destSubdir="plugins" if="qtjambi.plugins.platforms.qeglfs"/>
        <library name="qwebgl"                         load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="platforms" destSubdir="plugins" if="qtjambi.plugins.platforms.qwebgl"/>
        <library name="qlinuxfb"                       load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="platforms" destSubdir="plugins" if="qtjambi.plugins.platforms.qlinuxfb"/>
        <library name="qminimalegl"                    load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="platforms" destSubdir="plugins" if="qtjambi.plugins.platforms.qminimalegl"/>
        <library name="qwayland-egl"                   load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="platforms" destSubdir="plugins" if="qtjambi.plugins.platforms.qwayland-egl"/>
        <library name="qwayland-generic"               load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="platforms" destSubdir="plugins" if="qtjambi.plugins.platforms.qwayland-generic"/>
        <library name="qxcb"                           load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="platforms" destSubdir="plugins" if="qtjambi.plugins.platforms.qxcb"/>
        <library name="qdirect2d"                      load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="platforms" destSubdir="plugins" if="qtjambi.plugins.platforms.qdirect2d"/>
        <library name="qxdgdesktopportal"              load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="platformthemes" destSubdir="plugins" if="qtjambi.plugins.platformthemes.qxdgdesktopportal"/>
        <library name="qgtk3"                          load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="platformthemes" destSubdir="plugins" if="qtjambi.plugins.platformthemes.qgtk3"/>
        <library name="qtmultimedia_m3u"               load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="playlistformats" destSubdir="plugins" if="qtjambi.plugins.playlistformats.qtmultimedia_m3u"/>
        <library name="qtposition_positionpoll"        load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="position" destSubdir="plugins" if="qtjambi.plugins.position.qtposition_positionpoll"/>
        <library name="qtposition_cl"                  load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="position" destSubdir="plugins" if="qtjambi.plugins.position.qtposition_cl"/>
        <library name="qtposition_serialnmea"          load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="position" destSubdir="plugins" if="qtjambi.plugins.position.qtposition_serialnmea"/>
        <library name="qtposition_geoclue"             load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="position" destSubdir="plugins" if="qtjambi.plugins.position.qtposition_geoclue"/>
        <library name="qtposition_geoclue2"            load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="position" destSubdir="plugins" if="qtjambi.plugins.position.qtposition_geoclue2"/>
        <library name="windowsprintersupport"          load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="printsupport" destSubdir="plugins" if="qtjambi.plugins.printsupport.windowsprintersupport"/>
        <library name="cupsprintersupport"             load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="printsupport" destSubdir="plugins" if="qtjambi.plugins.printsupport.cupsprintersupport"/>
        <library name="cocoaprintersupport"            load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="printsupport" destSubdir="plugins" if="qtjambi.plugins.printsupport.cocoaprintersupport"/>
        <library name="qmldbg_tcp_qtdeclarative"       load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="qml1tooling" destSubdir="plugins" if="qtjambi.plugins.qml1tooling.qmldbg_tcp_qtdeclarative"/>
        <library name="qmldbg_qtquick2"                load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="qmltooling" destSubdir="plugins" if="qtjambi.plugins.qmltooling.qmldbg_qtquick2"/>
        <library name="qmldbg_debugger"                load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="qmltooling" destSubdir="plugins" if="qtjambi.plugins.qmltooling.qmldbg_debugger"/>
        <library name="qmldbg_inspector"               load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="qmltooling" destSubdir="plugins" if="qtjambi.plugins.qmltooling.qmldbg_inspector"/>
        <library name="qmldbg_local"                   load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="qmltooling" destSubdir="plugins" if="qtjambi.plugins.qmltooling.qmldbg_local"/>
        <library name="qmldbg_messages"                load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="qmltooling" destSubdir="plugins" if="qtjambi.plugins.qmltooling.qmldbg_messages"/>
        <library name="qmldbg_native"                  load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="qmltooling" destSubdir="plugins" if="qtjambi.plugins.qmltooling.qmldbg_native"/>
        <library name="qmldbg_nativedebugger"          load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="qmltooling" destSubdir="plugins" if="qtjambi.plugins.qmltooling.qmldbg_nativedebugger"/>
        <library name="qmldbg_preview"                 load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="qmltooling" destSubdir="plugins" if="qtjambi.plugins.qmltooling.qmldbg_preview"/>
        <library name="qmldbg_profiler"                load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="qmltooling" destSubdir="plugins" if="qtjambi.plugins.qmltooling.qmldbg_profiler"/>
        <library name="qmldbg_quickprofiler"           load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="qmltooling" destSubdir="plugins" if="qtjambi.plugins.qmltooling.qmldbg_quickprofiler"/>
        <library name="qmldbg_server"                  load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="qmltooling" destSubdir="plugins" if="qtjambi.plugins.qmltooling.qmldbg_server"/>
        <library name="qmldbg_tcp"                     load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="qmltooling" destSubdir="plugins" if="qtjambi.plugins.qmltooling.qmldbg_tcp"/>
        <library name="scene2d"                        load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="renderplugins" destSubdir="plugins" if="qtjambi.plugins.renderplugins.scene2d"/>
        <library name="qtsensorgestures_plugin"        load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="sensorgestures" destSubdir="plugins" if="qtjambi.plugins.sensorgestures.qtsensorgestures_plugin"/>
        <library name="qtsensorgestures_shakeplugin"   load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="sensorgestures" destSubdir="plugins" if="qtjambi.plugins.sensorgestures.qtsensorgestures_shakeplugin"/>
        <library name="qtsensors_generic"              load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="sensors" destSubdir="plugins" if="qtjambi.plugins.sensors.qtsensors_generic"/>
        <library name="qtsensors_ios"                  load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="sensors" destSubdir="plugins" if="qtjambi.plugins.sensors.qtsensors_ios"/>
        <library name="gltfsceneexport"                load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="sceneparsers" destSubdir="plugins" if="qtjambi.plugins.sceneparsers.gltfsceneexport"/>
        <library name="gltfsceneimport"                load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="sceneparsers" destSubdir="plugins" if="qtjambi.plugins.sceneparsers.gltfsceneimport"/>
        <library name="eglvideonode"                   load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="video/videonode" destSubdir="plugins" if="qtjambi.plugins.video.videonode.eglvideonode"/>
        <library name="qtgeoservices_mapbox"           load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="geoservices" destSubdir="plugins" if="qtjambi.plugins.geoservices.qtgeoservices_mapbox"/>
        <library name="qtgeoservices_nokia"            load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="geoservices" destSubdir="plugins" if="qtjambi.plugins.geoservices.qtgeoservices_nokia"/>
        <library name="qtgeoservices_osm"              load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="geoservices" destSubdir="plugins" if="qtjambi.plugins.geoservices.qtgeoservices_osm"/>
        <library name="qtgeoservices_esri"             load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="geoservices" destSubdir="plugins" if="qtjambi.plugins.geoservices.qtgeoservices_esri"/>
        <library name="qtgeoservices_itemsoverlay"     load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="geoservices" destSubdir="plugins" if="qtjambi.plugins.geoservices.qtgeoservices_itemsoverlay"/>
        <library name="qtgeoservices_mapboxgl"         load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="geoservices" destSubdir="plugins" if="qtjambi.plugins.geoservices.qtgeoservices_mapboxgl"/>
        <library name="qmacstyle"                      load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="styles"      destSubdir="plugins" if="qtjambi.plugins.styles.qmacstyle"/>
        <library name="qwindowsvistastyle"             load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="styles"      destSubdir="plugins" if="qtjambi.plugins.styles.qwindowsvistastyle"/>
        <library name="darwingamepad"                  load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="gamepad"      destSubdir="plugins" if="qtjambi.plugins.gamepad.darwingamepad"/>
        <library name="qtpassthrucanbus"               load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="canbus"      destSubdir="plugins" if="qtjambi.plugins.canbus.qtpassthrucanbus"/>
        <library name="qtpeakcanbus"                   load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="canbus"      destSubdir="plugins" if="qtjambi.plugins.canbus.qtpeakcanbus"/>
        <library name="qttinycanbus"                   load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="canbus"      destSubdir="plugins" if="qtjambi.plugins.canbus.qttinycanbus"/>
        <library name="qtvirtualcanbus"                load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="canbus"      destSubdir="plugins" if="qtjambi.plugins.canbus.qtvirtualcanbus"/>
        <library name="qquickwidget"                   load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="designer"    destSubdir="plugins" if="qtjambi.plugins.designer.qquickwidget"/>
        <library name="qwebengineview"                 load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="designer"    destSubdir="plugins" if="qtjambi.plugins.designer.qwebengineview"/>
        <library name="defaultgeometryloader"          load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="geometryloaders"    destSubdir="plugins" if="qtjambi.plugins.geometryloaders.defaultgeometryloader"/>
        <library name="gltfgeometryloader"             load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="geometryloaders"    destSubdir="plugins" if="qtjambi.plugins.geometryloaders.gltfgeometryloader"/>
        <library name="qtexttospeech_speechosx"        load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="texttospeech"    destSubdir="plugins" if="qtjambi.plugins.texttospeech.qtexttospeech_speechosx"/>
        <library name="qtwebview_darwin"               load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="webview"    destSubdir="plugins" if="qtjambi.plugins.webview.qtwebview_darwin"/>
        <library name="qtwebview_webengine"            load="never" type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="webview"    destSubdir="plugins" if="qtjambi.plugins.webview.qtwebview_webengine"/>

        <!-- Designer plugins -->
        <!--library name="JambiCustomWidget" dsoVersion="${qtjambi.soname.version.major}" load="never" type="qtjambi-plugin" rootPath="${qtjambi.jambi.pluginsdir}" subdir="designer" destSubdir="plugins-designer" if="qtjambi.designer.debug.true}"/>
        <library name="JambiLanguage"     dsoVersion="${qtjambi.soname.version.major}" load="never" type="qtjambi-plugin" rootPath="${qtjambi.jambi.pluginsdir}" subdir="designer" destSubdir="plugins-designer" if="qtjambi.designer.debug.true}"/-->

        <!-- Additional designer plugin configuration, we absolute path in destSubdir to ignore the source path -->
        <!--directory name="" rootPath="${basedir}/plugins/qtjambi" destSubdir="/plugins-designer" recursive="true" if="qtjambi.designer"/-->
        <library name="icudtl.dat"                         type="file" rootPath="${qtjambi.qt.webengine.resourcesdir}" subdir="" destSubdir="resources" load="never" if="qtjambi.webenginecore.true"/>
        <library name="qtwebengine_devtools_resources.pak" type="file" rootPath="${qtjambi.qt.webengine.resourcesdir}" subdir="" destSubdir="resources" load="never" if="qtjambi.webenginecore.true"/>
        <library name="qtwebengine_resources.pak"          type="file" rootPath="${qtjambi.qt.webengine.resourcesdir}" subdir="" destSubdir="resources" load="never" if="qtjambi.webenginecore.true"/>
        <library name="qtwebengine_resources_100p.pak"     type="file" rootPath="${qtjambi.qt.webengine.resourcesdir}" subdir="" destSubdir="resources" load="never" if="qtjambi.webenginecore.true"/>
        <library name="qtwebengine_resources_200p.pak"     type="file" rootPath="${qtjambi.qt.webengine.resourcesdir}" subdir="" destSubdir="resources" load="never" if="qtjambi.webenginecore.true"/>
        <library name="QtWebEngineProcess"                 type="exe"  rootPath="${qtjambi.qt.webengineprocess.dir}"   subdir="" destSubdir="tools"     load="never" if="qtjambi.webenginecore.true"/>
        <directory name="qtwebengine_locales" rootPath="${qtjambi.qt.translationsdir}" destSubdir="translations" recursive="true" if="qtjambi.webengine.locales" />
        <library name="qt_[a-z][a-z].qm"                          type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations" load="never"/>
        <library name="qt_[a-z][a-z]_[A-Z][A-Z].qm"               type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations" load="never"/>
        <library name="qtbase_[a-z][a-z].qm"                      type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations" load="never"/>
        <library name="qtbase_[a-z][a-z]_[A-Z][A-Z].qm"           type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations" load="never"/>
        <library name="qtconnectivity_[a-z][a-z].qm"              type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations" load="never" if="qtjambi.bluetooth.true"/>
        <library name="qtconnectivity_[a-z][a-z]_[A-Z][A-Z].qm"   type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations" load="never" if="qtjambi.bluetooth.true"/>
        <library name="qtdeclarative_[a-z][a-z].qm"               type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations" load="never" if="qtjambi.qml.true"/>
        <library name="qtdeclarative_[a-z][a-z]_[A-Z][A-Z].qm"    type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations" load="never" if="qtjambi.qml.true"/>
        <library name="qtlocation_[a-z][a-z].qm"                  type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations" load="never" if="qtjambi.location.true"/>
        <library name="qtlocation_[a-z][a-z]_[A-Z][A-Z].qm"       type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations" load="never" if="qtjambi.location.true"/>
        <library name="qtmultimedia_[a-z][a-z].qm"                type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations" load="never" if="qtjambi.multimedia.true"/>
        <library name="qtmultimedia_[a-z][a-z]_[A-Z][A-Z].qm"     type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations" load="never" if="qtjambi.multimedia.true"/>
        <library name="qtquickcontrols_[a-z][a-z].qm"             type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations" load="never" if="qtjambi.quick.true"/>
        <library name="qtquickcontrols_[a-z][a-z]_[A-Z][A-Z].qm"  type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations" load="never" if="qtjambi.quick.true"/>
        <library name="qtquickcontrols2_[a-z][a-z].qm"            type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations" load="never" if="qtjambi.quickcontrols2.true"/>
        <library name="qtquickcontrols2_[a-z][a-z]_[A-Z][A-Z].qm" type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations" load="never" if="qtjambi.quickcontrols2.true"/>
        <library name="qtscript_[a-z][a-z].qm"                    type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations" load="never" if="qtjambi.script.true"/>
        <library name="qtscript_[a-z][a-z]_[A-Z][A-Z].qm"         type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations" load="never" if="qtjambi.script.true"/>
        <library name="qtserialport_[a-z][a-z].qm"                type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations" load="never" if="qtjambi.serialport.true"/>
        <library name="qtserialport_[a-z][a-z]_[A-Z][A-Z].qm"     type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations" load="never" if="qtjambi.serialport.true"/>
        <library name="qtwebengine_[a-z][a-z].qm"                 type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations" load="never" if="qtjambi.webenginecore.true"/>
        <library name="qtwebengine_[a-z][a-z]_[A-Z][A-Z].qm"      type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations" load="never" if="qtjambi.webenginecore.true"/>
        <library name="qtwebsockets_[a-z][a-z].qm"                type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations" load="never" if="qtjambi.websockets.true"/>
        <library name="qtwebsockets_[a-z][a-z]_[A-Z][A-Z].qm"     type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations" load="never" if="qtjambi.websockets.true"/>
        <library name="qtxmlpatterns_[a-z][a-z].qm"               type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations" load="never" if="qtjambi.xmlpatterns.true"/>
        <library name="qtxmlpatterns_[a-z][a-z]_[A-Z][A-Z].qm"    type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations" load="never" if="qtjambi.xmlpatterns.true"/>

        <!-- new since Qt5 -->
        <library name="qmlfolderlistmodelplugin"		type="qmlplugin"	rootPath="${qtjambi.qt.qmlmodulesdir}"		subdir="Qt/labs/folderlistmodel"	destSubdir="qml" 		load="never"		if="qtjambi.Qt.labs.folderlistmodel.qmlfolderlistmodelplugin"/>
        <library name="qmldir"							type="file"			rootPath="${qtjambi.qt.qmlmodulesdir}"		subdir="Qt/labs/folderlistmodel"	destSubdir="qml" 		load="never"		if="qtjambi.Qt.labs.folderlistmodel.qmlfolderlistmodelplugin.true"/>
        <library name="plugins.qmltypes"				type="file"			rootPath="${qtjambi.qt.qmlmodulesdir}"		subdir="Qt/labs/folderlistmodel"	destSubdir="qml" 		load="never"		if="qtjambi.Qt.labs.folderlistmodel.qmlfolderlistmodelplugin.true"/>
        <library name="qmlsettingsplugin"				type="qmlplugin"	rootPath="${qtjambi.qt.qmlmodulesdir}"		subdir="Qt/labs/settings"	destSubdir="qml" 		load="never"		if="qtjambi.Qt.labs.settings.qmlsettingsplugin"/>
        <library name="qmldir"							type="file"			rootPath="${qtjambi.qt.qmlmodulesdir}"		subdir="Qt/labs/settings"	destSubdir="qml" 		load="never"		if="qtjambi.Qt.labs.settings.qmlsettingsplugin.true"/>
        <library name="plugins.qmltypes"				type="file"			rootPath="${qtjambi.qt.qmlmodulesdir}"		subdir="Qt/labs/settings"	destSubdir="qml" 		load="never"		if="qtjambi.Qt.labs.settings.qmlsettingsplugin.true"/>
        <library name="qmldir"							type="file"			rootPath="${qtjambi.qt.qmlmodulesdir}"		subdir="QtQml"	destSubdir="qml" 		load="never"/>
        <library name="plugins.qmltypes"				type="file"			rootPath="${qtjambi.qt.qmlmodulesdir}"		subdir="QtQml"	destSubdir="qml" 		load="never"/>
        <library name="builtins.qmltypes"				type="file"			rootPath="${qtjambi.qt.qmlmodulesdir}"		subdir=""	destSubdir="qml" 		load="never"/>

        <directory name="Qt3D/Animation" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.Qt3D.Animation.quick3danimationplugin.true"/>
        <directory name="Qt3D/Core" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.Qt3D.Core.quick3dcoreplugin.true"/>
        <directory name="Qt3D/Extras" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.Qt3D.Extras.quick3dextrasplugin.true"/>
        <directory name="Qt3D/Input" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.Qt3D.Input.quick3dinputplugin.true"/>
        <directory name="Qt3D/Logic" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.Qt3D.Logic.quick3dlogicplugin.true"/>
        <directory name="Qt3D/Render" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.Qt3D.Render.quick3drenderplugin.true"/>
        <directory name="QtAudioEngine" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.QtAudioEngine.declarative_audioengine.true"/>
        <directory name="QtBluetooth" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.QtBluetooth.declarative_bluetooth.true"/>
        <directory name="QtGamepad" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.QtGamepad.declarative_gamepad.true"/>
        <directory name="QtGraphicalEffects" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.qml.QtGraphicalEffects.true"/>
        <directory name="QtLocation" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.QtLocation.declarative_location.true"/>
        <directory name="QtMultimedia" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.QtMultimedia.declarative_multimedia.true"/>
        <directory name="QtNfc" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.QtNfc.declarative_nfc.true"/>
        <directory name="QtPositioning" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.QtPositioning.declarative_positioning.true"/>
        <directory name="QtQml/Models.2" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true" if="qtjambi.QtQml.Models.2.modelsplugin.true"/>
        <directory name="QtQml/StateMachine" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true" if="qtjambi.QtQml.StateMachine.qtqmlstatemachine.true"/>
        <directory name="QtQml/RemoteObjects" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true" if="qtjambi.QtQml.RemoteObjects.qtqmlremoteobjects.true"/>
        <directory name="QtQuick/Controls" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true" if="qtjambi.QtQuick.Controls.qtquickcontrolsplugin.true"/>
        <directory name="QtQuick/Controls.2" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true" if="qtjambi.QtQuick.Controls.2.qtquickcontrols2plugin.true"/>
        <directory name="QtQuick/Dialogs" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true" if="qtjambi.QtQuick.Dialogs.dialogplugin.true"/>
        <directory name="QtQuick/Extras" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true" if="qtjambi.QtQuick.Extras.qtquickextrasplugin.true"/>
        <directory name="QtQuick/Layouts" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true" if="qtjambi.QtQuick.Layouts.qquicklayoutsplugin.true"/>
        <directory name="QtQuick/LocalStorage" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true" if="qtjambi.QtQuick.LocalStorage.qmllocalstorageplugin.true"/>
        <directory name="QtQuick/Particles.2" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true" if="qtjambi.QtQuick.Particles.2.particlesplugin.true"/>
        <directory name="QtQuick/PrivateWidgets" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true" if="qtjambi.QtQuick.PrivateWidgets.widgetsplugin.true"/>
        <directory name="QtQuick/Scene3D" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true" if="qtjambi.QtQuick.Scene3D.qtquickscene3dplugin.true"/>
        <directory name="QtQuick/Scene2D" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true" if="qtjambi.QtQuick.Scene2D.qtquickscene2dplugin.true"/>
        <directory name="QtQuick/Shapes" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true" if="qtjambi.QtQuick.Shapes.qmlshapesplugin.true"/>
        <directory name="QtQuick/Templates.2" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true" if="qtjambi.QtQuick.Templates.2.qtquicktemplates2plugin.true"/>
        <directory name="QtQuick/VirtualKeyboard" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true" if="qtjambi.QtQuick.VirtualKeyboard.qtquickvirtualkeyboardplugin.true"/>
        <directory name="QtQuick/Window.2" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true" if="qtjambi.QtQuick.Window.2.windowplugin.true"/>
        <directory name="QtQuick/XmlListModel" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true" if="qtjambi.QtQuick.XmlListModel.qmlxmllistmodelplugin.true"/>
        <directory name="QtQuick.2" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.QtQuick.2.qtquick2plugin.true"/>
        <directory name="QtRemoteObjects" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.QtRemoteObjects.qtremoteobjects.true"/>
        <directory name="QtScxml" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.QtScxml.declarative_scxml.true"/>
        <directory name="QtSensors" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.QtSensors.declarative_sensors.true"/>
        <directory name="QtWebChannel" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.QtWebChannel.declarative_webchannel.true"/>
        <directory name="QtWebEngine" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.QtWebEngine.qtwebengineplugin.true"/>
        <directory name="QtWebSockets" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.QtWebSockets.declarative_qmlwebsockets.true"/>
        <directory name="QtWebView" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.QtWebView.declarative_webview.true"/>
        <directory name="QtWinExtras" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.QtWinExtras.qml_winextras.true"/>
        <directory name="QtCanvas3D" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.QtCanvas3D.qtcanvas3d.true"/>
        <directory name="QtTest" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.QtTest.qmltestplugin.true"/>

        <!-- Win32 MinGW only -->
        <library name="libgcc_s_dw2-1" type="system" rootPath="${qtjambi.qt.bindir}" destSubdir="lib" load="system" if="qtjambi.packaging.dso.libgcc_s_dw2-1"/>
        <!-- Win32/Win64 MinGW-W64 only -->
        <library name="libgcc_s_sjlj-1" type="system" rootPath="${qtjambi.qt.bindir}" destSubdir="lib" load="system" if="qtjambi.packaging.dso.libgcc_s_sjlj-1"/>
        <!-- Win32/Win64 MinGW only -->
        <library name="libstdc++-6"    type="system" rootPath="${qtjambi.qt.bindir}" destSubdir="lib" load="system" if="qtjambi.packaging.dso.libstdc++-6"/>
        <!-- Win32/Win64 MinGW related but unable to find it required at runtime
         by current toolchain versions (mingw gcc 4.5.2, mingw-w64 gcc 4.7.0) -->
        <library name="mingwm10"       type="system" rootPath="${qtjambi.qt.bindir}" destSubdir="lib" load="system" if="qtjambi.packaging.dso.mingwm10"/>

        <!-- Win32/Win64 libeay32.dll -->
        <library name="libeay32" type="dso" rootPath="${qtjambi.qt.bindir}" destSubdir="lib" load="never" if="qtjambi.packaging.dso.libeay32"/>

        <!-- Win32/Win64 libssl32.dll MinGW only -->
        <library name="libssl32" type="dso" rootPath="${qtjambi.qt.bindir}" destSubdir="lib" load="never" if="qtjambi.packaging.dso.libssl32"/>
        <!-- Win32/Win64 ssleay32.dll MSVC only -->
        <library name="ssleay32" type="dso" rootPath="${qtjambi.qt.bindir}" destSubdir="lib" load="never" if="qtjambi.packaging.dso.ssleay32"/>

        <!-- Linux libssl.so -->
        <library name="ssl"      type="dso" rootPath="${qtjambi.qt.libdir}" destSubdir="lib" load="never" if="qtjambi.packaging.dso.libssl"/>
        <!-- Linux libcrypto.so.1.0.0 -->
        <library name="crypto"   type="dso" rootPath="${qtjambi.qt.libdir}" destSubdir="lib" load="never" if="qtjambi.packaging.dso.libcrypto"/>

        <!-- Win32/Win64 zlib1.dll -->
        <library name="zlib1"    type="dso" rootPath="${qtjambi.qt.bindir}" destSubdir="lib" load="never" if="qtjambi.packaging.dso.zlib1"/>

        <!-- Linux libz.so.1 -->
        <library name="z"        type="dso" rootPath="${qtjambi.qt.libdir}" destSubdir="lib" load="never" if="qtjambi.packaging.dso.libz"/>

        <!-- Macosx libdbus-1.3.dylib (this should never have _debug
        since the Qt runtime loader code does not account for that,
        src/dbus/qdbus_symbols.cpp) -->
        <library name="dbus-1"   type="dso" rootPath="${qtjambi.qt.libdir}" destSubdir="lib" load="never" srcPath="${qtjambi.packaging.dso.libdbus-1}" if="qtjambi.packaging.dso.libdbus-1"/>

        <plugin path="plugins"/>
        <plugin-designer path="plugins-designer"/>
    </qtjambi-platform-jar>

    <mkdir dir="${outputDir}/platform-output${platformjar.debug.suffix}/META-INF/io.qt.qtjambi.native.deployment"/>
    <copy file="${outputDir}/platform-output${platformjar.debug.suffix}/qtjambi-deployment.xml" tofile="${outputDir}/platform-output${platformjar.debug.suffix}/META-INF/io.qt.qtjambi.native.deployment/${qtjambi.osname}.${qtjambi.compiler}-${qtjambi.version.bundle}.xml"/>

    <property name="destination-file" value="${jardir}/qtjambi-native-${qtjambi.osname}-${qtjambi.compiler}-${qtjambi.version.bundle}${platformjar.debug.suffix}.jar"/>
    <jar destfile="${destination-file}">
        <fileset dir="${outputDir}/platform-output${platformjar.debug.suffix}"/>
        <manifest>
            <!-- <attribute name="Created-By"        value="${user.name} - ${TODAY}"/>  -->
            <attribute name="Built-By"               value="${user.name} - ${TODAY}"/>
            <!-- <attribute name="Bundle-ActivationPolicy" value="lazy"/> -->
            <!-- <attribute name="Bundle-Activator"    value="org.qtjambi.qt.native.${qtjambi.osplatform}.osgi.Activator"/> -->
            <attribute name="Bundle-Classpath"       value="."/>
            <attribute name="Bundle-Description"     value="QtJambi Native Bundle (${qtjambi.osname} ${platformjar.conf})"/>
            <attribute name="Bundle-DocURL"          value="http://www.qt-jambi.org/go/osgi/DocURL/org.qtjambi.qt.native.${qtjambi.osname}${qtjambi.configuration.osgi};version=${qtjambi.version.bundle}"/>
            <!-- TODO: qtjambi.png -->
            <!-- <attribute name="Bundle-Icon"       value="qtjambi.png"/> -->
            <attribute name="Bundle-License"         value="GNU LESSER GENERAL PUBLIC LICENSE Version 2.1 February 1999 with Nokia Qt LGPL Exception version 1.0"/>
            <!-- <attribute name="Bundle-Localization"   value=""/> -->
            <attribute name="Bundle-ManifestVersion" value="2"/>
            <attribute name="Bundle-Name"            value="QtJambi Native Bundle (${qtjambi.osname} ${platformjar.conf})"/>
            <!-- Need to format Bundle-NativeCode correctly with selectors -->
            <!-- <attribute name="Bundle-NativeCode"     value="lib/**"/> -->
            <attribute name="Bundle-RequiredExecutionEnvironment" value="J2SE-1.5"/>
            <attribute name="Bundle-SymbolicName"    value="io.qt.qtjambi.native.${qtjambi.osname}${qtjambi.configuration.osgi};singleton:=true"/>
            <attribute name="Bundle-Vendor"          value="www.qt.io"/>
            <!-- <attribute name="DynamicImport-Package"       value=""/> -->
            <attribute name="Bundle-Version"         value="${qtjambi.version.bundle}"/>
            <attribute name="Provide-Capability"     value="gui.ws.qtjambi.native;osplatform=${qtjambi.osplatform};oscpu=${qtjambi.oscpu};compiler=${qtjambi.compiler};configuration=${platformjar.conf}"/>
            <attribute name="Export-Package"         value="io.qt.qtjambi.native.${qtjambi.osplatform}.${qtjambi.oscpu}.${qtjambi.compiler}${qtjambi.configuration.osgi}"/>
            <attribute name="X-QtJambi-Arch"         value="${qtjambi.osname}"/>
            <attribute name="X-QtJambi-Build"        value="${platformjar.conf}"/><!-- release debug test -->
            <attribute name="X-QtJambi-CacheKey"     value="${qtjambi.version.cachekey}" />
            <attribute name="X-QtJambi-Deployment"   value="/qtjambi-deployment.xml,/META-INF/io.qt.qtjambi.native.deployment/${qtjambi.osplatform}.${qtjambi.oscpu}.${qtjambi.compiler}.${platformjar.conf}-${qtjambi.version.bundle}.xml"/>
            <attribute name="X-QtJambi-Version"      value="${qtjambi.version.bundle}"/>
            <attribute name="X-QtJambi-SoName-Version" value="${qtjambi.soname.version.major}"/>
        </manifest>
    </jar>
  </target>
  <target name="javadocs" depends="init.build" description="Generates the Java Doc pages for QtJambi">
        <delete dir="${basedir}/javadocs" failonerror="no"/>
		<tstamp>
			<format property="year" pattern="yyyy"/>
		</tstamp>
        <path id="java.source.dirs">
            <dirset dir="${basedir}/build/java-src" includes="qtjambi*"/>
        </path>
		<pathconvert pathsep=","             
			property="java.source.dirs2"             
			refid="java.source.dirs">
		</pathconvert>
        <multirootfileset basedirs="${java.source.dirs2}" id="java.source.files">
            <include name="**/*.java"/>
            <exclude name="**/QtJambi_LibraryInitializer.java"/>
        </multirootfileset>
		<pathconvert pathsep="${line.separator}"             
			property="java.source.files.flat"             
			refid="java.source.files">
		</pathconvert>
        <javadoc 
    	additionalparam="-Xdoclint:html -exclude io.qt.internal:io.qt.internal.fileengine --show-packages exported -html5 -keywords"
	    access="protected" 
	    author="true" 
	    destdir="${basedir}/javadocs" 
	    windowtitle="QtJambi API"
	    nodeprecated="false" 
	    nodeprecatedlist="false" 
	    noindex="false" 
	    nonavbar="false" 
	    notree="false" 
	    source="${minimum.java.version}" 
	    defaultexcludes="yes"
        splitindex="true" 
	    useexternalfile="true" 
	    use="true" 
        modulesourcepath="${basedir}/build/java-src"
        version="true"
        stylesheetfile="${basedir}/docstyle.css"
        sourcefiles="${java.source.files.flat}">
          <link href="https://docs.oracle.com/en/java/javase/14/docs/api"/>
			<doctitle>QtJambi ${qtjambi.version.bundle} Reference Documentation</doctitle>
            <bottom><![CDATA[
						<font size="-2">QtJambi Reference Documentation<br>
                        The documentation provided herein is licensed under the terms of the 
                        <a href="https://www.gnu.org/licenses/fdl.html">GNU Free Documentation License version 1.3</a>
                        as published by the Free Software Foundation. 
                        Qt and respective logos are trademarks of The Qt Company Ltd. in Finland and/or other countries worldwide. 
                        All other trademarks are property of their respective owners.
                        </font>
					]]></bottom>
        </javadoc>
        <echo>${jardir}/qtjambi-${qtjambi.soname.version.major}.${qtjambi.soname.version.minor}-javadocs.zip</echo>
        <delete file="${jardir}/qtjambi-${qtjambi.soname.version.major}.${qtjambi.soname.version.minor}-javadocs.zip"/>
        <zip destfile="${jardir}/qtjambi-${qtjambi.soname.version.major}.${qtjambi.soname.version.minor}-javadocs.zip">
            <fileset dir="${basedir}/javadocs"/>
        </zip>
  </target>
</project>
