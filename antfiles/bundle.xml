<project name="qtjambi.bundle" default="library.native.bundle">

  <!--
      ************************************************************
      Library Compilation etc ...
      ************************************************************
  -->

  <!-- 
      Runs qmake for Jambi source
  -->
  <target name="library.native.qmake" depends="init.build" description="Runs qmake on the Qt Jambi native library">
      <mkdir dir="${qtjambi.builddir}"/>
      <qmake recursive="true"
          dir="${qtjambi.builddir}"
          pro="${basedir}/src/cpp/qtjambi.pro"
          config="${qtjambi.configuration} ${qtjambi.config.jumptable}"
          qtconfig="${qtjambi.qtconfig}"
          debugTools="${qtjambi.debug-tools}"
          qmakebinary="${qtjambi.qt.qmake.abspath}"/>
  </target>

  <!--
      Runs make for Jambi source
  -->
  <target name="library.native.compile" depends="library.native.qmake" description="Compiles the C++ Qt Jambi library">
      <make dir="${qtjambi.builddir}" target="${qtjambi.qmake.target.default}"/>
  </target>
  
  <target name="library.native.makeonly" depends="init.build">
      <make dir="${qtjambi.builddir}" target="${qtjambi.qmake.target.default}"/>
  </target>

  <target name="library.native.bundle" depends="init.build" description="Creates a .jar file file containing native libraries.">
      <if>
        <equals arg1="${qtjambi.configuration}" arg2="debug_and_release" />
        <then>
            <antcall target="library.native.bundle.release"/>
            <antcall target="library.native.bundle.debug"/>
        </then>
      </if>

      <if>
        <equals arg1="${qtjambi.configuration}" arg2="release" />
        <then>
            <antcall target="library.native.bundle.release"/>
        </then>
      </if>

      <if>
        <equals arg1="${qtjambi.configuration}" arg2="test" />
        <then>
            <antcall target="library.native.bundle.release"/>
        </then>
      </if>

      <if>
        <equals arg1="${qtjambi.configuration}" arg2="debug" />
        <then>
            <antcall target="library.native.bundle.debug"/>
        </then>
      </if>
  </target>

  <target name="library.native.bundle.release" description="Creates a .jar file file containing native libraries.">
    <antcall target="library.native.bundle.platformjar">
        <param name="platformjar.debug" value="false"/>
        <param name="platformjar.debug.suffix" value=""/>
        <param name="platformjar.debug.suffix2" value=""/>
        <param name="platformjar.conf" value="release"/>
    </antcall>
  </target>

  <target name="library.native.bundle.debug" description="Creates a .jar file file containing native libraries.">
    <antcall target="library.native.bundle.platformjar">
        <param name="platformjar.debug" value="true"/>
        <param name="platformjar.debug.suffix" value="-debug"/>
        <param name="platformjar.debug.suffix2" value="_debug"/>
        <param name="platformjar.conf" value="debug"/>
    </antcall>
  </target>
  
  <target name="library.native.bundle.platformjar">
    <condition property="target.lib.dir" value="bin" else="lib">
        <os family="windows"/>
    </condition>
    <condition property="flagprefix" value="debug.true" else="true">
        <istrue value="${platformjar.debug}"/>
    </condition>
    <condition property="qsqljdbc.${flagprefix}" value="true" else="false">
        <available file="${qtjambi.builddir}/plugins/sqldrivers/qsqljdbc.jar"/>
    </condition>
    <condition property="helpwidgets.${flagprefix}" value="true" else="false">
        <available file="${qtjambi.builddir}/plugins/designer/helpwidgets.jar"/>
    </condition>
    <condition property="multimediawidgets.${flagprefix}" value="true" else="false">
        <available file="${qtjambi.builddir}/plugins/designer/multimediawidgets.jar"/>
    </condition>
    <qtjambi-platform-jar cacheKey="${qtjambi.version.cachekey}"
                          outdir="${deploymentdir}/${qtjambi.osname}/${qtjambi.compiler}/${platformjar.conf}"
                          debug="${platformjar.debug}">
        <!-- Qt Libraries -->
        <library name="QtCore"                    type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.core"/>
        <library name="QtGui"                     type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.gui"/>
        <library name="QtOpenGL"                  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.opengl"/>
        <library name="QtOpenGL"                  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.opengl.util"/>
        <library name="QtConcurrent"              type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.concurrent"/>
        <library name="QtXml"                     type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.xml"/>
        <library name="QtScxml"                   type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.scxml"/>
        <library name="QtRemoteObjects"           type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.remoteobjects"/>
        <library name="QtSql"                     type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.sql"/>
        <library name="QtSvg"                     type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.svg"/>
        <library name="QtSvgWidgets"              type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.svgwidgets"/>
        <library name="QtNetwork"                 type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.network"/>
        <library name="QtNetworkAuth"             type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.networkauth"/>
        <library name="QtHelp"                    type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.help"/>
        <library name="QtScript"                  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.script"/>
        <library name="QtScriptTools"             type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.scripttools"/>
        <library name="QtMultimedia"              type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.multimedia"/>
        <library name="QtXmlPatterns"             type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.xmlpatterns"/>
        <library name="QtDesigner"                type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.designer"/>
        <library name="QtDesignerComponents"      type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.designercomponents"/>
        <library name="QtVirtualKeyboard"         type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.virtualkeyboard"/>
        <library name="QtCharts"                  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.charts"/>
        <library name="QtDataVisualization"       type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.datavisualization"/>
        <library name="QtCLucene"                 type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.clucene"/>
        <library name="QtDBus"                    type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.dbus"/>
        <library name="QtTest"                    type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.test"/>
        <library name="QtWidgets"                 type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.widgets"/>
        <library name="QtUiTools"                 type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.uitools"/>
        <library name="QtUiPlugin"                type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.uiplugin"/>
        <library name="QtOpenGLWidgets"           type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.openglwidgets"/>
        <library name="QtBluetooth"               type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.bluetooth"/>
        <library name="QtLocation"                type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.location"/>
        <library name="QtMultimediaQuick"         type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.multimediaquick"/>
        <library name="QtMultimediaGstTools"      type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.multimediagsttools"/>
        <library name="QtMultimediaWidgets"       type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.multimediawidgets"/>
        <library name="QtOpenGL"                  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.multimediawidgets.opengl"/>
        <library name="QtNfc"                     type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.nfc"/>
        <library name="QtPurchasing"              type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.purchasing"/>
        <library name="QtPositioning"             type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.positioning"/>
        <library name="QtPositioningQuick"        type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.positioningquick"/>
        <library name="QtQml"                     type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.qml"/>
        <library name="QtQmlModels"               type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.qmlmodels"/>
        <library name="QtQmlWorkerScript"         type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.qmlworkerscript"/>
        <library name="QtQuick"                   type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.quick"/>
        <library name="QtQuickControls2"          type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.quickcontrols2"/>
        <library name="QtQuickTemplates2"         type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.quicktemplates2"/>
        <library name="QtPrintSupport"            type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.printsupport"/>
        <library name="QtQuickParticles"          type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.quickparticles"/>
        <library name="QtQuickTest"               type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.quicktest"/>
        <library name="QtQuickWidgets"            type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.quickwidgets"/>
        <library name="QtQuickShapes"             type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.quickshapes"/>
        <library name="QtSensors"                 type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.sensors"/>
        <library name="QtSerialPort"              type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.serialport"/>
        <library name="QtSerialBus"               type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.serialbus"/>
        <library name="QtWebChannel"              type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.webchannel"/>
        <library name="QtWebSockets"              type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.websockets"/>
        <library name="QtWebView"                 type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.webview"/>
        <library name="QtWebEngineWidgets"        type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.webenginewidgets"/>
        <library name="QtWebEngineCore"           type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.webenginecore"/>
        <library name="QtWebEngine"               type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.webengine"/>
        <library name="QtWinExtras"               type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.winextras"/>
        <library name="QtMacExtras"               type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.macextras"/>
        <library name="QtX11Extras"               type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.x11extras"/>
        <library name="Qt3DCore"                  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.qt3dcore"/>
        <library name="Qt3DInput"                 type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.qt3dinput"/>
        <library name="Qt3DQuick"                 type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.qt3dquick"/>
        <library name="Qt3DQuickInput"            type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.qt3dquickinput"/>
        <library name="Qt3DQuickRenderer"         type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.qt3dquickrenderer"/>
        <library name="Qt3DExtras"                type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.qt3dextras"/>
        <library name="Qt3DQuickExtras"           type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.qt3dquickextras"/>
        <library name="Qt3DQuickRender"           type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.qt3dquickrender"/>
        <library name="Qt3DQuickScene2D"          type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.qt3dquickscene2d"/>
        <library name="Qt3DRenderer"              type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.qt3drenderer"/>
        <library name="Qt3DRender"                type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.qt3drender"/>
        <library name="Qt3DLogic"                 type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.qt3dlogic"/>
        <library name="Qt3DAnimation"             type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.qt3danimation"/>
        <library name="QtQuick3D"                 type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.quick3d"/>
        <library name="QtQuick3DRuntimeRender"    type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.quick3druntimerender"/>
        <library name="QtQuick3DUtils"            type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.quick3dutils"/>
        <library name="QtQuick3DRender"           type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.quick3drender"/>
        <library name="QtQuick3DAssetImport"      type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.quick3dassetimport"/>
        <library name="QtOpenGLExtensions"        type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.openglextensions"/>
        <library name="QtPlatformSupport"         type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.platformsupport"/>
        <library name="QtEglDeviceIntegration"    type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.egldeviceintegration"/>
        <library name="QtEglFSDeviceIntegration"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.eglfsdeviceintegration"/>
        <library name="QtEglFsKmsSupport"         type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.eglfskmssupport"/>
        <library name="QtWaylandClient"           type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.waylandclient"/>
        <library name="QtWaylandCompositor"       type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.waylandcompositor"/>
        <library name="QtGamepad"                 type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.gamepad"/>
        <library name="QtXcbQpa"                  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.xcbqpa"/>
        <library name="QtLabsTemplates"           type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.labstemplates"/>
        <library name="QtTextToSpeech"            type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.texttospeech"/>
        <library name="Qt3DQuickAnimation"        type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.3dquickanimation"/>
        <library name="QtANGLE"                   type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.angle"/>
        <library name="QtBodymovin"               type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.bodymovin"/>
        <library name="QtShaderTools"             type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.shadertools"/>
        <library name="libEGL"                    type="qt"  dsoVersion="no-version" rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.libegl"/>
        <library name="libGLESv2"                 type="qt"  dsoVersion="no-version" rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.libglesv2"/>
        <library name="d3dcompiler_47"            type="qt"  dsoVersion="no-version" rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.d3dcompiler_47"/>
        <library name="opengl32sw"                type="qt"  dsoVersion="no-version" rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.opengl32sw"/>
        <library name="libicudata"                type="dso" dsoVersion="56"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.libicudata"/>
        <library name="libicuuc"                  type="dso" dsoVersion="56"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.libicuuc"/>
        <library name="libicui18n"                type="dso" dsoVersion="56"  rootPath="${qtjambi.qt.libdir}"     destSubdir="${target.lib.dir}" if="qtjambi.libicui18n"/>
        <library name="jarimport"                 type="qtjambi-utility" rootPath="${qtjambi.jambi.libdir}" destSubdir="utilities" if="qtjambi.qml.true"/>
        <library name="qtjambiplugin"             type="qtjambi-utility" rootPath="${qtjambi.jambi.libdir}" destSubdir="utilities" if="qtjambi.core.true"/>

        <!-- QtJambi Libraries -->
        <library name="QtJambi"                   type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.core.true"/>
        <library name="QtJambiCore"               type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.core.true"/>
        <library name="QtJambiBluetooth"          type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.bluetooth.true"/>
        <library name="QtJambiConcurrent"         type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.concurrent.true"/>
        <library name="QtJambiLocation"           type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.location.true"/>
        <library name="QtJambiPositioning"        type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.positioning.true"/>
        <library name="QtJambiCharts"             type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.charts.true"/>
        <library name="QtJambiVirtualKeyboard"    type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.virtualkeyboard.true"/>
        <library name="QtJambiGui"                type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.gui.true"/>
        <library name="QtJambiOpenGL"             type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.opengl.true"/>
        <library name="QtJambiXml"                type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.xml.true"/>
        <library name="QtJambiScxml"              type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.scxml.true"/>
        <library name="QtJambiRemoteObjects"      type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.remoteobjects.true"/>
        <library name="QtJambiSql"                type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.sql.true"/>
        <library name="QtJambiHelp"               type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.help.true"/>
        <library name="QtJambiNfc"                type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.nfc.true"/>
        <library name="QtJambiPurchasing"         type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.purchasing.true"/>
        <library name="QtJambiScript"             type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.script.true"/>
        <library name="QtJambiScriptTools"        type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.scripttools.true"/>
        <library name="QtJambiMultimedia"         type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.multimedia.true"/>
        <library name="QtJambiMultimediaWidgets"  type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.multimediawidgets.true"/>
        <library name="QtJambiSvg"                type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.svg.true"/>
        <library name="QtJambiSvgWidgets"         type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.svgwidgets.true"/>
        <library name="QtJambiPrintSupport"       type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.printsupport.true"/>
        <library name="QtJambiNetwork"            type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.network.true"/>
        <library name="QtJambiNetworkAuth"        type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.networkauth.true"/>
        <library name="QtJambiXmlPatterns"        type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.xmlpatterns.true"/>
        <library name="QtJambiDBus"               type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.dbus.true"/>
        <library name="QtJambiTest"               type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.test.true"/>
        <library name="QtJambiWidgets"            type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.widgets.true"/>
        <library name="QtJambiUiTools"            type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.uitools.true"/>
        <library name="QtJambiDesigner"           type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.designer.true"/>
        <library name="QtJambiOpenGLWidgets"      type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.openglwidgets.true"/>
        <library name="QtJambiWebSockets"         type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.websockets.true"/>
        <library name="QtJambiGamepad"            type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.gamepad.true"/>
        <library name="QtJambiWebChannel"         type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.webchannel.true"/>
        <library name="QtJambiWebEngine"          type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.webengine.true"/>
        <library name="QtJambiWebEngineCore"      type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.webenginecore.true"/>
        <library name="QtJambiWebEngineWidgets"   type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.webenginewidgets.true"/>
        <library name="QtJambiWebView"            type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.webview.true"/>
        <library name="QtJambiQml"                type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.qml.true"/>
        <library name="QtJambiQuick"              type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.quick.true"/>
        <library name="QtJambiQuickControls2"     type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.quickcontrols2.true"/>
        <library name="QtJambiQuickWidgets"       type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.quickwidgets.true"/>
        <library name="QtJambiWinExtras"          type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.winextras.true"/>
        <library name="QtJambiMacExtras"          type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.macextras.true"/>
        <library name="QtJambiX11Extras"          type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.x11extras.true"/>
        <library name="QtJambiSerialPort"         type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.serialport.true"/>
        <library name="QtJambiSerialBus"          type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.serialbus.true"/>
        <library name="QtJambiSensors"            type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.sensors.true"/>
        <library name="QtJambi3DCore"             type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.qt3dcore.true"/>
        <library name="QtJambi3DQuick"            type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.qt3dquick.true"/>
        <library name="QtJambi3DExtras"           type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.qt3dextras.true"/>
        <library name="QtJambi3DQuickExtras"      type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.qt3dquickextras.true"/>
        <library name="QtJambi3DInput"            type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.qt3dinput.true"/>
        <library name="QtJambi3DQuickScene2D"     type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.qt3dquickscene2d.true"/>
        <library name="QtJambi3DRender"           type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.qt3drender.true"/>
        <library name="QtJambi3DAnimation"        type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.qt3danimation.true"/>
        <library name="QtJambi3DLogic"            type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.qt3dlogic.true"/>
        <library name="QtJambiDataVisualization"  type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.datavisualization.true"/>
        <library name="QtJambiQuick3D"            type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.quick3d.true"/>
        
        <!-- Qt Plugins -->
        <library name="qtaccessiblewidgets"       type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="accessible" destSubdir="plugins" if="qtjambi.plugins.accessible.qtaccessiblewidgets"/>

        <library name="qconnmanbearer"            type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="bearer" destSubdir="plugins" if="qtjambi.plugins.bearer.connmanbearer"/>
        <library name="qgenericbearer"            type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="bearer" destSubdir="plugins" if="qtjambi.plugins.bearer.genericbearer"/>
        <library name="qnativewifibearer"         type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="bearer" destSubdir="plugins" if="qtjambi.plugins.bearer.nativewifibearer"/>
        <library name="qnmbearer"                 type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="bearer" destSubdir="plugins" if="qtjambi.plugins.bearer.nmbearer"/>

        <library name="qglgraphicssystem"         type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="graphicssystems" destSubdir="plugins" if="qtjambi.plugins.graphicssystems.glgraphicssystem"/>
        <library name="qtracegraphicssystem"      type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="graphicssystems" destSubdir="plugins" if="qtjambi.plugins.graphicssystems.tracegraphicssystem"/>

        <library name="qsvgicon"                  type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="iconengines" destSubdir="plugins" if="qtjambi.plugins.iconengines.svgicon"/>

        <library name="qgif"                      type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="imageformats" destSubdir="plugins" if="qtjambi.plugins.imageformats.gif"/>
        <library name="qicns"                     type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="imageformats" destSubdir="plugins" if="qtjambi.plugins.imageformats.qicns"/>
        <library name="qico"                      type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="imageformats" destSubdir="plugins" if="qtjambi.plugins.imageformats.ico"/>
        <library name="qjpeg"                     type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="imageformats" destSubdir="plugins" if="qtjambi.plugins.imageformats.jpeg"/>
        <library name="qmng"                      type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="imageformats" destSubdir="plugins" if="qtjambi.plugins.imageformats.mng"/>
        <library name="qpng"                      type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="imageformats" destSubdir="plugins" if="qtjambi.plugins.imageformats.png"/>
        <library name="qsvg"                      type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="imageformats" destSubdir="plugins" if="qtjambi.plugins.imageformats.svg"/>
        <library name="qtiff"                     type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="imageformats" destSubdir="plugins" if="qtjambi.plugins.imageformats.tiff"/>
        <library name="qmacheif"                  type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="imageformats" destSubdir="plugins" if="qtjambi.plugins.imageformats.qmacheif"/>
        <library name="qmacjp2"                   type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="imageformats" destSubdir="plugins" if="qtjambi.plugins.imageformats.qmacjp2"/>
        <library name="qwbmp"                     type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="imageformats" destSubdir="plugins" if="qtjambi.plugins.imageformats.qwbmp"/>
        <library name="qjp2"                      type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="imageformats" destSubdir="plugins" if="qtjambi.plugins.imageformats.qjp2"/>
        <library name="qicns"                     type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="imageformats" destSubdir="plugins" if="qtjambi.plugins.imageformats.qicns"/>
        <library name="qdds"                      type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="imageformats" destSubdir="plugins" if="qtjambi.plugins.imageformats.qdds"/>
        <library name="qtga"                      type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="imageformats" destSubdir="plugins" if="qtjambi.plugins.imageformats.qtga"/>
        <library name="qwbmp"                     type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="imageformats" destSubdir="plugins" if="qtjambi.plugins.imageformats.qwbmp"/>
        <library name="qwebp"                     type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="imageformats" destSubdir="plugins" if="qtjambi.plugins.imageformats.qwebp"/>

        <library name="qimsw-multi"               type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="inputmethods" destSubdir="plugins" if="qtjambi.plugins.inputmethods.imsw-multi"/>

        <!-- Unicode codecs -->
        <library name="qcncodecs"                 type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="codecs"     destSubdir="plugins" if="qtjambi.plugins.codecs.cncodecs"/>
        <library name="qjpcodecs"                 type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="codecs"     destSubdir="plugins" if="qtjambi.plugins.codecs.jpcodecs"/>
        <library name="qkrcodecs"                 type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="codecs"     destSubdir="plugins" if="qtjambi.plugins.codecs.krcodecs"/>
        <library name="qtwcodecs"                 type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="codecs"     destSubdir="plugins" if="qtjambi.plugins.codecs.twcodecs"/>

        <library name="qmldbg_tcp"                type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="qmltooling" destSubdir="plugins" if="qtjambi.plugins.qmltooling.qmldbg_tcp"/>
        <library name="qsceneai"                  type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="sceneformats" destSubdir="plugins" if="qtjambi.plugins.sceneformats.qsceneai"/>
        <library name="qscenebezier"              type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="sceneformats" destSubdir="plugins" if="qtjambi.plugins.sceneformats.qscenebezier"/>
        <library name="qsceneobj"                 type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="sceneformats" destSubdir="plugins" if="qtjambi.plugins.sceneformats.qsceneobj"/>

        <library name="qtscriptdbus"              type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="script"     destSubdir="plugins" if="qtjambi.plugins.script.qtscriptdbus"/>

        <library name="qsqljdbc"                  type="qtjambi-plugin" rootPath="${qtjambi.jambi.pluginsdir}" subdir="sqldrivers" destSubdir="plugins" if="qsqljdbc.true"/>
        <library name="qsqljdbc.jar"              type="file"           rootPath="${qtjambi.jambi.pluginsdir}" subdir="sqldrivers" destSubdir="plugins" if="qsqljdbc.true"/>
        <library name="qsqljdbc.jar"              type="file"           rootPath="${qtjambi.jambi.pluginsdir}" subdir="sqldrivers" destSubdir="plugins" if="qsqljdbc.debug.true"/>
        <library name="qsqlite"                   type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="sqldrivers" destSubdir="plugins" if="qtjambi.plugins.sqldrivers.sqlite"/>
        <library name="qsqlite2"                  type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="sqldrivers" destSubdir="plugins" if="qtjambi.plugins.sqldrivers.sqlite2"/>
        <library name="qsqlmysql"                 type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="sqldrivers" destSubdir="plugins" if="qtjambi.plugins.sqldrivers.sqlmysql"/>
        <library name="qsqlodbc"                  type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="sqldrivers" destSubdir="plugins" if="qtjambi.plugins.sqldrivers.sqlodbc"/>
        <library name="qsqlpsql"                  type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="sqldrivers" destSubdir="plugins" if="qtjambi.plugins.sqldrivers.sqlpsql"/>
        <library name="qsqltds"                   type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="sqldrivers" destSubdir="plugins" if="qtjambi.plugins.sqldrivers.sqltds"/>

        <library name="qtaudio_windows"                type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="audio"      destSubdir="plugins" if="qtjambi.plugins.audio.qtaudio_windows"/>
        <library name="qtaudio_alsa"                   type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="audio"      destSubdir="plugins" if="qtjambi.plugins.audio.qtaudio_alsa"/>
        <library name="qtaudio_coreaudio"              type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="audio"      destSubdir="plugins" if="qtjambi.plugins.audio.qtaudio_coreaudio"/>
        <library name="qtmedia_pulse"                  type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="audio"      destSubdir="plugins" if="qtjambi.plugins.audio.qtmedia_pulse"/>
        <library name="qtuiotouchplugin"               type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="generic"      destSubdir="plugins" if="qtjambi.plugins.generic.qtuiotouchplugin"/>
        <library name="dsengine"                       type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="mediaservice" destSubdir="plugins" if="qtjambi.plugins.mediaservice.dsengine"/>
        <library name="qtmedia_audioengine"            type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="mediaservice" destSubdir="plugins" if="qtjambi.plugins.mediaservice.qtmedia_audioengine"/>
        <library name="wmfengine"                      type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="mediaservice" destSubdir="plugins" if="qtjambi.plugins.mediaservice.wmfengine"/>
        <library name="gstaudiodecoder"                type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="mediaservice" destSubdir="plugins" if="qtjambi.plugins.mediaservice.gstaudiodecoder"/>
        <library name="gstcamerabin"                   type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="mediaservice" destSubdir="plugins" if="qtjambi.plugins.mediaservice.gstcamerabin"/>
        <library name="gstmediacapture"                type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="mediaservice" destSubdir="plugins" if="qtjambi.plugins.mediaservice.gstmediacapture"/>
        <library name="gstmediaplayer"                 type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="mediaservice" destSubdir="plugins" if="qtjambi.plugins.mediaservice.gstmediaplayer"/>
        <library name="qavfmediaplayer"                type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="mediaservice" destSubdir="plugins" if="qtjambi.plugins.mediaservice.qavfmediaplayer"/>
        <library name="qavfcamera"                     type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="mediaservice" destSubdir="plugins" if="qtjambi.plugins.mediaservice.qavfcamera"/>
        <library name="qminimal"                       type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="platforms" destSubdir="plugins" if="qtjambi.plugins.platforms.qminimal"/>
        <library name="qoffscreen"                     type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="platforms" destSubdir="plugins" if="qtjambi.plugins.platforms.qoffscreen"/>
        <library name="qwindows"                       type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="platforms" destSubdir="plugins" if="qtjambi.plugins.platforms.qwindows"/>
        <library name="qcocoa"                         type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="platforms" destSubdir="plugins" if="qtjambi.plugins.platforms.qcocoa"/>
        <library name="qeglfs"                         type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="platforms" destSubdir="plugins" if="qtjambi.plugins.platforms.qeglfs"/>
        <library name="qwebgl"                         type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="platforms" destSubdir="plugins" if="qtjambi.plugins.platforms.qwebgl"/>
        <library name="qlinuxfb"                       type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="platforms" destSubdir="plugins" if="qtjambi.plugins.platforms.qlinuxfb"/>
        <library name="qminimalegl"                    type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="platforms" destSubdir="plugins" if="qtjambi.plugins.platforms.qminimalegl"/>
        <library name="qwayland-egl"                   type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="platforms" destSubdir="plugins" if="qtjambi.plugins.platforms.qwayland-egl"/>
        <library name="qwayland-generic"               type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="platforms" destSubdir="plugins" if="qtjambi.plugins.platforms.qwayland-generic"/>
        <library name="qxcb"                           type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="platforms" destSubdir="plugins" if="qtjambi.plugins.platforms.qxcb"/>
        <library name="qdirect2d"                      type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="platforms" destSubdir="plugins" if="qtjambi.plugins.platforms.qdirect2d"/>
        <library name="qxdgdesktopportal"              type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="platformthemes" destSubdir="plugins" if="qtjambi.plugins.platformthemes.qxdgdesktopportal"/>
        <library name="qgtk3"                          type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="platformthemes" destSubdir="plugins" if="qtjambi.plugins.platformthemes.qgtk3"/>
        <library name="qtmultimedia_m3u"               type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="playlistformats" destSubdir="plugins" if="qtjambi.plugins.playlistformats.qtmultimedia_m3u"/>
        <library name="qtposition_positionpoll"        type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="position" destSubdir="plugins" if="qtjambi.plugins.position.qtposition_positionpoll"/>
        <library name="qtposition_cl"                  type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="position" destSubdir="plugins" if="qtjambi.plugins.position.qtposition_cl"/>
        <library name="qtposition_serialnmea"          type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="position" destSubdir="plugins" if="qtjambi.plugins.position.qtposition_serialnmea"/>
        <library name="qtposition_geoclue"             type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="position" destSubdir="plugins" if="qtjambi.plugins.position.qtposition_geoclue"/>
        <library name="qtposition_geoclue2"            type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="position" destSubdir="plugins" if="qtjambi.plugins.position.qtposition_geoclue2"/>
        <library name="windowsprintersupport"          type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="printsupport" destSubdir="plugins" if="qtjambi.plugins.printsupport.windowsprintersupport"/>
        <library name="cupsprintersupport"             type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="printsupport" destSubdir="plugins" if="qtjambi.plugins.printsupport.cupsprintersupport"/>
        <library name="cocoaprintersupport"            type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="printsupport" destSubdir="plugins" if="qtjambi.plugins.printsupport.cocoaprintersupport"/>
        <library name="qmldbg_tcp_qtdeclarative"       type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="qml1tooling" destSubdir="plugins" if="qtjambi.plugins.qml1tooling.qmldbg_tcp_qtdeclarative"/>
        <library name="qmldbg_qtquick2"                type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="qmltooling" destSubdir="plugins" if="qtjambi.plugins.qmltooling.qmldbg_qtquick2"/>
        <library name="qmldbg_debugger"                type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="qmltooling" destSubdir="plugins" if="qtjambi.plugins.qmltooling.qmldbg_debugger"/>
        <library name="qmldbg_inspector"               type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="qmltooling" destSubdir="plugins" if="qtjambi.plugins.qmltooling.qmldbg_inspector"/>
        <library name="qmldbg_local"                   type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="qmltooling" destSubdir="plugins" if="qtjambi.plugins.qmltooling.qmldbg_local"/>
        <library name="qmldbg_messages"                type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="qmltooling" destSubdir="plugins" if="qtjambi.plugins.qmltooling.qmldbg_messages"/>
        <library name="qmldbg_native"                  type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="qmltooling" destSubdir="plugins" if="qtjambi.plugins.qmltooling.qmldbg_native"/>
        <library name="qmldbg_nativedebugger"          type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="qmltooling" destSubdir="plugins" if="qtjambi.plugins.qmltooling.qmldbg_nativedebugger"/>
        <library name="qmldbg_preview"                 type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="qmltooling" destSubdir="plugins" if="qtjambi.plugins.qmltooling.qmldbg_preview"/>
        <library name="qmldbg_profiler"                type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="qmltooling" destSubdir="plugins" if="qtjambi.plugins.qmltooling.qmldbg_profiler"/>
        <library name="qmldbg_quickprofiler"           type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="qmltooling" destSubdir="plugins" if="qtjambi.plugins.qmltooling.qmldbg_quickprofiler"/>
        <library name="qmldbg_server"                  type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="qmltooling" destSubdir="plugins" if="qtjambi.plugins.qmltooling.qmldbg_server"/>
        <library name="qmldbg_tcp"                     type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="qmltooling" destSubdir="plugins" if="qtjambi.plugins.qmltooling.qmldbg_tcp"/>
        <library name="scene2d"                        type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="renderplugins" destSubdir="plugins" if="qtjambi.plugins.renderplugins.scene2d"/>
        <library name="qtsensorgestures_plugin"        type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="sensorgestures" destSubdir="plugins" if="qtjambi.plugins.sensorgestures.qtsensorgestures_plugin"/>
        <library name="qtsensorgestures_shakeplugin"   type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="sensorgestures" destSubdir="plugins" if="qtjambi.plugins.sensorgestures.qtsensorgestures_shakeplugin"/>
        <library name="qtsensors_generic"              type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="sensors" destSubdir="plugins" if="qtjambi.plugins.sensors.qtsensors_generic"/>
        <library name="qtsensors_ios"                  type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="sensors" destSubdir="plugins" if="qtjambi.plugins.sensors.qtsensors_ios"/>
        <library name="gltfsceneexport"                type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="sceneparsers" destSubdir="plugins" if="qtjambi.plugins.sceneparsers.gltfsceneexport"/>
        <library name="gltfsceneimport"                type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="sceneparsers" destSubdir="plugins" if="qtjambi.plugins.sceneparsers.gltfsceneimport"/>
        <library name="eglvideonode"                   type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="video/videonode" destSubdir="plugins" if="qtjambi.plugins.video.videonode.eglvideonode"/>
        <library name="qtgeoservices_mapbox"           type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="geoservices" destSubdir="plugins" if="qtjambi.plugins.geoservices.qtgeoservices_mapbox"/>
        <library name="qtgeoservices_nokia"            type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="geoservices" destSubdir="plugins" if="qtjambi.plugins.geoservices.qtgeoservices_nokia"/>
        <library name="qtgeoservices_osm"              type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="geoservices" destSubdir="plugins" if="qtjambi.plugins.geoservices.qtgeoservices_osm"/>
        <library name="qtgeoservices_esri"             type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="geoservices" destSubdir="plugins" if="qtjambi.plugins.geoservices.qtgeoservices_esri"/>
        <library name="qtgeoservices_itemsoverlay"     type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="geoservices" destSubdir="plugins" if="qtjambi.plugins.geoservices.qtgeoservices_itemsoverlay"/>
        <library name="qtgeoservices_mapboxgl"         type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="geoservices" destSubdir="plugins" if="qtjambi.plugins.geoservices.qtgeoservices_mapboxgl"/>
        <library name="qmacstyle"                      type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="styles"      destSubdir="plugins" if="qtjambi.plugins.styles.qmacstyle"/>
        <library name="qwindowsvistastyle"             type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="styles"      destSubdir="plugins" if="qtjambi.plugins.styles.qwindowsvistastyle"/>
        <library name="darwingamepad"                  type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="gamepad"      destSubdir="plugins" if="qtjambi.plugins.gamepad.darwingamepad"/>
        <library name="qtpassthrucanbus"               type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="canbus"      destSubdir="plugins" if="qtjambi.plugins.canbus.qtpassthrucanbus"/>
        <library name="qtpeakcanbus"                   type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="canbus"      destSubdir="plugins" if="qtjambi.plugins.canbus.qtpeakcanbus"/>
        <library name="qttinycanbus"                   type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="canbus"      destSubdir="plugins" if="qtjambi.plugins.canbus.qttinycanbus"/>
        <library name="qtvirtualcanbus"                type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="canbus"      destSubdir="plugins" if="qtjambi.plugins.canbus.qtvirtualcanbus"/>
        <library name="qquickwidget"                   type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="designer"    destSubdir="plugins" if="qtjambi.plugins.designer.qquickwidget"/>
        <library name="qwebengineview"                 type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="designer"    destSubdir="plugins" if="qtjambi.plugins.designer.qwebengineview"/>
        <library name="multimediawidgets"              type="qtjambi-plugin" rootPath="${qtjambi.jambi.pluginsdir}" subdir="designer" destSubdir="plugins" if="multimediawidgets.true"/>
        <library name="multimediawidgets.jar"          type="file"           rootPath="${qtjambi.jambi.pluginsdir}" subdir="designer" destSubdir="plugins" if="multimediawidgets.true"/>
        <library name="multimediawidgets.jar"          type="file"           rootPath="${qtjambi.jambi.pluginsdir}" subdir="designer" destSubdir="plugins" if="multimediawidgets.debug.true"/>
        <library name="helpwidgets"                    type="qtjambi-plugin" rootPath="${qtjambi.jambi.pluginsdir}" subdir="designer" destSubdir="plugins" if="helpwidgets.true"/>
        <library name="helpwidgets.jar"                type="file"           rootPath="${qtjambi.jambi.pluginsdir}" subdir="designer" destSubdir="plugins" if="helpwidgets.true"/>
        <library name="helpwidgets.jar"                type="file"           rootPath="${qtjambi.jambi.pluginsdir}" subdir="designer" destSubdir="plugins" if="helpwidgets.debug.true"/>
        <library name="defaultgeometryloader"          type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="geometryloaders"    destSubdir="plugins" if="qtjambi.plugins.geometryloaders.defaultgeometryloader"/>
        <library name="gltfgeometryloader"             type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="geometryloaders"    destSubdir="plugins" if="qtjambi.plugins.geometryloaders.gltfgeometryloader"/>
        <library name="qtexttospeech_speechosx"        type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="texttospeech"    destSubdir="plugins" if="qtjambi.plugins.texttospeech.qtexttospeech_speechosx"/>
        <library name="qtwebview_darwin"               type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="webview"    destSubdir="plugins" if="qtjambi.plugins.webview.qtwebview_darwin"/>
        <library name="qtwebview_webengine"            type="plugin" rootPath="${qtjambi.qt.pluginsdir}" subdir="webview"    destSubdir="plugins" if="qtjambi.plugins.webview.qtwebview_webengine"/>

        <!-- Designer plugins -->
        <!--library name="QtJambiCustomWidget"            type="plugin" rootPath="${qtjambi.jambi.pluginsdir}" subdir="designer" destSubdir="plugins" if="qtjambi.designer.true"/-->
        <!--library name="QtJambiLanguage"                type="plugin" rootPath="${qtjambi.jambi.pluginsdir}" subdir="designer" destSubdir="plugins" if="qtjambi.designer.true"/-->

        <!-- Additional designer plugin configuration, we absolute path in destSubdir to ignore the source path -->
        <!--directory name="" rootPath="${basedir}/plugins/qtjambi" destSubdir="/plugins-designer" recursive="true" if="qtjambi.designer"/-->
        <library name="icudtl.dat"                         type="file" rootPath="${qtjambi.qt.webengine.resourcesdir}" subdir="" destSubdir="resources" if="qtjambi.webenginecore.resources"/>
        <library name="qtwebengine_devtools_resources.pak" type="file" rootPath="${qtjambi.qt.webengine.resourcesdir}" subdir="" destSubdir="resources" if="qtjambi.webenginecore.resources"/>
        <library name="qtwebengine_resources.pak"          type="file" rootPath="${qtjambi.qt.webengine.resourcesdir}" subdir="" destSubdir="resources" if="qtjambi.webenginecore.resources"/>
        <library name="qtwebengine_resources_100p.pak"     type="file" rootPath="${qtjambi.qt.webengine.resourcesdir}" subdir="" destSubdir="resources" if="qtjambi.webenginecore.resources"/>
        <library name="qtwebengine_resources_200p.pak"     type="file" rootPath="${qtjambi.qt.webengine.resourcesdir}" subdir="" destSubdir="resources" if="qtjambi.webenginecore.resources"/>
        <library name="QtWebEngineProcess"                 type="exe"  rootPath="${qtjambi.qt.webengineprocess.dir}"   subdir="" destSubdir="${qtjambi.qt.webengineprocess.targetdir}" if="qtjambi.webenginecore.resources"/>
        <directory name="qtwebengine_locales" rootPath="${qtjambi.qt.translationsdir}" destSubdir="translations" recursive="true" if="qtjambi.webengine.locales" />
        <library name="qt_[a-z][a-z].qm"                          type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations"/>
        <library name="qt_[a-z][a-z]_[A-Z][A-Z].qm"               type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations"/>
        <library name="qtbase_[a-z][a-z].qm"                      type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations"/>
        <library name="qtbase_[a-z][a-z]_[A-Z][A-Z].qm"           type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations"/>
        <library name="qtconnectivity_[a-z][a-z].qm"              type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations" if="qtjambi.bluetooth.true"/>
        <library name="qtconnectivity_[a-z][a-z]_[A-Z][A-Z].qm"   type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations" if="qtjambi.bluetooth.true"/>
        <library name="qtdeclarative_[a-z][a-z].qm"               type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations" if="qtjambi.qml.true"/>
        <library name="qtdeclarative_[a-z][a-z]_[A-Z][A-Z].qm"    type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations" if="qtjambi.qml.true"/>
        <library name="qtlocation_[a-z][a-z].qm"                  type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations" if="qtjambi.location.true"/>
        <library name="qtlocation_[a-z][a-z]_[A-Z][A-Z].qm"       type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations" if="qtjambi.location.true"/>
        <library name="qtmultimedia_[a-z][a-z].qm"                type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations" if="qtjambi.multimedia.true"/>
        <library name="qtmultimedia_[a-z][a-z]_[A-Z][A-Z].qm"     type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations" if="qtjambi.multimedia.true"/>
        <library name="qtquickcontrols_[a-z][a-z].qm"             type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations" if="qtjambi.quick.true"/>
        <library name="qtquickcontrols_[a-z][a-z]_[A-Z][A-Z].qm"  type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations" if="qtjambi.quick.true"/>
        <library name="qtquickcontrols2_[a-z][a-z].qm"            type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations" if="qtjambi.quickcontrols2.true"/>
        <library name="qtquickcontrols2_[a-z][a-z]_[A-Z][A-Z].qm" type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations" if="qtjambi.quickcontrols2.true"/>
        <library name="qtscript_[a-z][a-z].qm"                    type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations" if="qtjambi.script.true"/>
        <library name="qtscript_[a-z][a-z]_[A-Z][A-Z].qm"         type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations" if="qtjambi.script.true"/>
        <library name="qtserialport_[a-z][a-z].qm"                type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations" if="qtjambi.serialport.true"/>
        <library name="qtserialport_[a-z][a-z]_[A-Z][A-Z].qm"     type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations" if="qtjambi.serialport.true"/>
        <library name="qtwebengine_[a-z][a-z].qm"                 type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations" if="qtjambi.webenginecore.true"/>
        <library name="qtwebengine_[a-z][a-z]_[A-Z][A-Z].qm"      type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations" if="qtjambi.webenginecore.true"/>
        <library name="qtwebsockets_[a-z][a-z].qm"                type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations" if="qtjambi.websockets.true"/>
        <library name="qtwebsockets_[a-z][a-z]_[A-Z][A-Z].qm"     type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations" if="qtjambi.websockets.true"/>
        <library name="qtxmlpatterns_[a-z][a-z].qm"               type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations" if="qtjambi.xmlpatterns.true"/>
        <library name="qtxmlpatterns_[a-z][a-z]_[A-Z][A-Z].qm"    type="fileset" rootPath="${qtjambi.qt.translationsdir}" subdir="" destSubdir="translations" if="qtjambi.xmlpatterns.true"/>

        <!-- new since Qt5 -->
        <directory name="Qt/labs/animation" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.Qt.labs.animation.true"/>
        <directory name="Qt/labs/folderlistmodel" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.Qt.labs.folderlistmodel.true"/>
        <directory name="Qt/labs/settings" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.Qt.labs.settings.true"/>
        <directory name="Qt/labs/platform" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.Qt.labs.platform.true"/>
        <directory name="Qt/labs/qmlmodels" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.Qt.labs.qmlmodels.true"/>
        <directory name="Qt/labs/sharedimage" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.Qt.labs.sharedimage.true"/>
        <directory name="Qt/labs/wavefrontmesh" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.Qt.labs.wavefrontmesh.true"/>

        <library name="[a-z]*.qmltypes" type="fileset" rootPath="${qtjambi.qt.qmlmodulesdir}" subdir="" destSubdir="qml" if="qtjambi.qml.true"/>
        <directory name="Qt3D/Animation" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.Qt3D.Animation.quick3danimationplugin.true"/>
        <directory name="Qt3D/Core" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.Qt3D.Core.quick3dcoreplugin.true"/>
        <directory name="Qt3D/Extras" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.Qt3D.Extras.quick3dextrasplugin.true"/>
        <directory name="Qt3D/Input" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.Qt3D.Input.quick3dinputplugin.true"/>
        <directory name="Qt3D/Logic" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.Qt3D.Logic.quick3dlogicplugin.true"/>
        <directory name="Qt3D/Render" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.Qt3D.Render.quick3drenderplugin.true"/>
        <directory name="QtAudioEngine" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.QtAudioEngine.declarative_audioengine.true"/>
        <directory name="QtBluetooth" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.QtBluetooth.declarative_bluetooth.true"/>
        <directory name="QtGamepad" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.QtGamepad.declarative_gamepad.true"/>
        <directory name="QtGraphicalEffects" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.qml.QtGraphicalEffects.true"/>
        <directory name="QtLocation" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.QtLocation.declarative_location.true"/>
        <directory name="QtMultimedia" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.QtMultimedia.declarative_multimedia.true"/>
        <directory name="QtNfc" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.QtNfc.declarative_nfc.true"/>
        <directory name="QtPositioning" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.QtPositioning.declarative_positioning.true"/>
        <directory name="QtQml" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.QtQml.qmlplugin.true"/>
        <directory name="QtQml/Models.2" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true" if="qtjambi.QtQml.Models.2.modelsplugin.true"/>
        <directory name="QtQml/Models" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true" if="qtjambi.QtQml.Models.modelsplugin.true"/>
        <directory name="QtQml/WorkerScript" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true" if="qtjambi.QtQml.WorkerScript.workerscriptplugin.true"/>
        <directory name="QtQml/StateMachine" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true" if="qtjambi.QtQml.StateMachine.qtqmlstatemachine.true"/>
        <directory name="QtQml/RemoteObjects" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true" if="qtjambi.QtQml.RemoteObjects.qtqmlremoteobjects.true"/>
        <directory name="QtQuick/Controls" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true" if="qtjambi.QtQuick.Controls.qtquickcontrolsplugin.true"/>
        <directory name="QtQuick/Controls.2" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true" if="qtjambi.QtQuick.Controls.2.qtquickcontrols2plugin.true"/>
        <directory name="QtQuick/Dialogs" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true" if="qtjambi.QtQuick.Dialogs.dialogplugin.true"/>
        <directory name="QtQuick/Extras" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true" if="qtjambi.QtQuick.Extras.qtquickextrasplugin.true"/>
        <directory name="QtQuick/Layouts" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true" if="qtjambi.QtQuick.Layouts.qquicklayoutsplugin.true"/>
        <directory name="QtQuick/LocalStorage" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true" if="qtjambi.QtQuick.LocalStorage.qmllocalstorageplugin.true"/>
        <directory name="QtQuick/Particles.2" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true" if="qtjambi.QtQuick.Particles.2.particlesplugin.true"/>
        <directory name="QtQuick/Particles" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true" if="qtjambi.QtQuick.Particles.particlesplugin.true"/>
        <directory name="QtQuick/PrivateWidgets" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true" if="qtjambi.QtQuick.PrivateWidgets.widgetsplugin.true"/>
        <directory name="QtQuick/Scene3D" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true" if="qtjambi.QtQuick.Scene3D.qtquickscene3dplugin.true"/>
        <directory name="QtQuick/Scene2D" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true" if="qtjambi.QtQuick.Scene2D.qtquickscene2dplugin.true"/>
        <directory name="QtQuick/Shapes" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true" if="qtjambi.QtQuick.Shapes.qmlshapesplugin.true"/>
        <directory name="QtQuick/Templates.2" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true" if="qtjambi.QtQuick.Templates.2.qtquicktemplates2plugin.true"/>
        <directory name="QtQuick/VirtualKeyboard" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true" if="qtjambi.QtQuick.VirtualKeyboard.qtquickvirtualkeyboardplugin.true"/>
        <directory name="QtQuick/Window.2" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true" if="qtjambi.QtQuick.Window.2.windowplugin.true"/>
        <directory name="QtQuick/Window" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true" if="qtjambi.QtQuick.Window.windowplugin.true"/>
        <directory name="QtQuick/XmlListModel" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true" if="qtjambi.QtQuick.XmlListModel.qmlxmllistmodelplugin.true"/>
        <directory name="QtQuick" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.QtQuick.qtquick2plugin.true"/>
        <directory name="QtQuick.2" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.QtQuick.2.qtquick2plugin.true"/>
        <directory name="QtRemoteObjects" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.QtRemoteObjects.qtremoteobjects.true"/>
        <directory name="QtScxml" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.QtScxml.declarative_scxml.true"/>
        <directory name="QtSensors" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.QtSensors.declarative_sensors.true"/>
        <directory name="QtWebChannel" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.QtWebChannel.declarative_webchannel.true"/>
        <directory name="QtWebEngine" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.QtWebEngine.qtwebengineplugin.true"/>
        <directory name="QtWebSockets" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.QtWebSockets.declarative_qmlwebsockets.true"/>
        <directory name="QtWebView" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.QtWebView.declarative_webview.true"/>
        <directory name="QtWinExtras" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.QtWinExtras.qml_winextras.true"/>
        <directory name="QtCanvas3D" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.QtCanvas3D.qtcanvas3d.true"/>
        <directory name="QtTest" rootPath="${qtjambi.qt.qmlmodulesdir}" destSubdir="qml" recursive="true"  if="qtjambi.QtTest.qmltestplugin.true"/>

        <!-- MinGW only -->
        <library name="libgcc_s_seh-1"  type="system" rootPath="${qtjambi.qt.bindir}" destSubdir="${target.lib.dir}" if="qtjambi.packaging.dso.libgcc_s_seh-1"/>
        <library name="libstdc++-6"     type="system" rootPath="${qtjambi.qt.bindir}" destSubdir="${target.lib.dir}" if="qtjambi.packaging.dso.libstdc++-6"/>
        <library name="libwinpthread-1" type="system" rootPath="${qtjambi.qt.bindir}" destSubdir="${target.lib.dir}" if="qtjambi.packaging.dso.libwinpthread-1"/>

        <!-- Win32/Win64 libeay32.dll -->
        <library name="libeay32" type="dso" rootPath="${qtjambi.qt.bindir}" destSubdir="${target.lib.dir}" if="qtjambi.packaging.dso.libeay32"/>

        <!-- Win32/Win64 libssl32.dll MinGW only -->
        <library name="libssl32" type="dso" rootPath="${qtjambi.qt.bindir}" destSubdir="${target.lib.dir}" if="qtjambi.packaging.dso.libssl32"/>
        <!-- Win32/Win64 ssleay32.dll MSVC only -->
        <library name="ssleay32" type="dso" rootPath="${qtjambi.qt.bindir}" destSubdir="${target.lib.dir}" if="qtjambi.packaging.dso.ssleay32"/>

        <!-- Linux libssl.so -->
        <library name="ssl"      type="dso" rootPath="${qtjambi.qt.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.packaging.dso.libssl"/>
        <!-- Linux libcrypto.so.1.0.0 -->
        <library name="crypto"   type="dso" rootPath="${qtjambi.qt.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.packaging.dso.libcrypto"/>

        <!-- Win32/Win64 zlib1.dll -->
        <library name="zlib1"    type="dso" rootPath="${qtjambi.qt.bindir}" destSubdir="${target.lib.dir}" if="qtjambi.packaging.dso.zlib1"/>

        <!-- Linux libz.so.1 -->
        <library name="z"        type="dso" rootPath="${qtjambi.qt.libdir}" destSubdir="${target.lib.dir}" if="qtjambi.packaging.dso.libz"/>

        <!-- Macosx libdbus-1.3.dylib (this should never have _debug
        since the Qt runtime loader code does not account for that,
        src/dbus/qdbus_symbols.cpp) -->
        <library name="dbus-1"   type="dso" rootPath="${qtjambi.qt.libdir}" destSubdir="${target.lib.dir}" srcPath="${qtjambi.packaging.dso.libdbus-1}" if="qtjambi.packaging.dso.libdbus-1"/>

        <plugin path="plugins"/>
        <!--plugin-designer path="plugins-designer"/-->
    </qtjambi-platform-jar>

    <property name="destination-file" value="${deploymentdir}/qtjambi-native-${qtjambi.osname}-${qtjambi.compiler}-${qtjambi.version.bundle}${platformjar.debug.suffix}.jar"/>
    <jar destfile="${destination-file}">
        <fileset dir="${deploymentdir}/${qtjambi.osname}/${qtjambi.compiler}/${platformjar.conf}" excludes="utilities" followsymlinks="false"/>
        <manifest>
            <!-- <attribute name="Created-By"        value="${user.name} - ${TODAY}"/>  -->
            <attribute name="Built-By"               value="${user.name} - ${TODAY}"/>
            <!-- <attribute name="Bundle-ActivationPolicy" value="lazy"/> -->
            <!-- <attribute name="Bundle-Activator"    value="org.qtjambi.qt.native.${qtjambi.osplatform}.osgi.Activator"/> -->
            <attribute name="Bundle-Classpath"       value="."/>
            <attribute name="Bundle-Description"     value="QtJambi Native Bundle (${qtjambi.osname} ${platformjar.conf})"/>
            <!-- TODO: qtjambi.png -->
            <!-- <attribute name="Bundle-Icon"       value="qtjambi.png"/> -->
            <attribute name="Bundle-License"         value="GNU LESSER GENERAL PUBLIC LICENSE Version 2.1 February 1999 with Nokia Qt LGPL Exception version 1.0"/>
            <!-- <attribute name="Bundle-Localization"   value=""/> -->
            <attribute name="Bundle-ManifestVersion" value="2"/>
            <attribute name="Bundle-Name"            value="QtJambi Native Bundle (${qtjambi.osname} ${platformjar.conf})"/>
            <!-- Need to format Bundle-NativeCode correctly with selectors -->
            <!-- <attribute name="Bundle-NativeCode"     value="lib/**"/> -->
            <attribute name="Bundle-RequiredExecutionEnvironment" value="JavaSE-${minimum.java.version}"/>
            <attribute name="Bundle-SymbolicName"    value="io.qt.qtjambi.native.${qtjambi.osname}${qtjambi.configuration.osgi};singleton:=true"/>
            <attribute name="Bundle-Vendor"          value="www.qt.io"/>
            <!-- <attribute name="DynamicImport-Package"       value=""/> -->
            <attribute name="Bundle-Version"         value="${qtjambi.version.bundle}"/>
            <attribute name="Provide-Capability"     value="gui.ws.qtjambi.native;osplatform=${qtjambi.osplatform};oscpu=${qtjambi.oscpu};compiler=${qtjambi.compiler};configuration=${platformjar.conf}"/>
            <attribute name="Export-Package"         value="io.qt.qtjambi.native.${qtjambi.osplatform}.${qtjambi.oscpu}.${qtjambi.compiler}${qtjambi.configuration.osgi}"/>
            <attribute name="X-QtJambi-Arch"         value="${qtjambi.osname}"/>
            <attribute name="X-QtJambi-Build"        value="${platformjar.conf}"/><!-- release debug test -->
            <attribute name="X-QtJambi-CacheKey"     value="${qtjambi.version.cachekey}" />
            <attribute name="X-QtJambi-Deployment"   value="/qtjambi-deployment.xml"/>
            <attribute name="X-QtJambi-Version"      value="${qtjambi.version.bundle}"/>
            <attribute name="X-QtJambi-SoName-Version" value="${qtjambi.soname.version.major}"/>
        </manifest>
    </jar>
    <delete dir="${deploymentdir}/${qtjambi.osname}/${qtjambi.compiler}/${platformjar.conf}/META-INF" failonerror="false"/>
    <delete file="${deploymentdir}/${qtjambi.osname}/${qtjambi.compiler}/${platformjar.conf}/qtjambi-deployment.xml" failonerror="false"/>
  </target>
  <target name="javadocs" depends="init.build" description="Generates the Java Doc pages for QtJambi">
    <delete dir="${outputDir}/javadocs" failonerror="no"/>
    <tstamp>
        <format property="year" pattern="yyyy"/>
    </tstamp>
    <path id="java.source.dirs">
        <dirset dir="${outputDir}/java-src" includes="qtjambi*"/>
    </path>
    <pathconvert pathsep=","             
        property="java.source.dirs2"             
        refid="java.source.dirs">
    </pathconvert>
    <if>
        <istrue value="${java.module.based}"/>
        <then>
            <multirootfileset basedirs="${java.source.dirs2}" id="java.source.files">
                <include name="**/*.java"/>
                <exclude name="**/QtJambi_LibraryInitializer.java"/>
            </multirootfileset>
            <pathconvert pathsep="${line.separator}"             
                property="java.source.files.flat"             
                refid="java.source.files">
            </pathconvert>
            <javadoc 
            additionalparam="-Xdoclint:html -exclude io.qt.internal:io.qt.internal.fileengine --show-packages exported -html5 -keywords --module-source-path ${basedir}/build/java-src"
            access="protected" 
            author="true" 
            destdir="${outputDir}/javadocs" 
            windowtitle="QtJambi API"
            nodeprecated="false" 
            nodeprecatedlist="false" 
            noindex="false" 
            nonavbar="false" 
            notree="false" 
            source="${minimum.java.version}" 
            defaultexcludes="yes"
            splitindex="true" 
            useexternalfile="true" 
            use="true" 
            version="true"
            stylesheetfile="${basedir}/docstyle.css"
            sourcefiles="${java.source.files.flat}">
              <link href="https://docs.oracle.com/en/java/javase/14/docs/api"/>
                <doctitle>QtJambi ${qtjambi.version.bundle} Reference Documentation</doctitle>
                <bottom><![CDATA[
                            <font size="-2">QtJambi Reference Documentation<br>
                            The documentation provided herein is licensed under the terms of the 
                            <a href="https://www.gnu.org/licenses/fdl.html">GNU Free Documentation License version 1.3</a>
                            as published by the Free Software Foundation. 
                            Qt and respective logos are trademarks of The Qt Company Ltd. in Finland and/or other countries worldwide. 
                            All other trademarks are property of their respective owners.
                            </font>
                        ]]></bottom>
            </javadoc>
        </then>
        <else>
            <multirootfileset basedirs="${java.source.dirs2}" id="java.source.files">
                <include name="**/*.java"/>
                <exclude name="module-info.java"/>
                <exclude name="**/QtJambi_LibraryInitializer.java"/>
            </multirootfileset>
            <pathconvert pathsep="${line.separator}"             
                property="java.source.files.flat"             
                refid="java.source.files">
            </pathconvert>
            <javadoc 
            additionalparam="-Xdoclint:html -exclude io.qt.internal:io.qt.internal.fileengine -keywords"
            access="protected" 
            author="true" 
            destdir="${outputDir}/javadocs" 
            windowtitle="QtJambi API"
            nodeprecated="false" 
            nodeprecatedlist="false" 
            noindex="false" 
            nonavbar="false" 
            notree="false" 
            source="${minimum.java.version}" 
            defaultexcludes="yes"
            splitindex="true" 
            useexternalfile="true" 
            use="true" 
            version="true"
            stylesheetfile="${basedir}/docstyle.css"
            sourcefiles="${java.source.files.flat}">
              <link href="https://docs.oracle.com/en/java/javase/14/docs/api"/>
                <doctitle>QtJambi ${qtjambi.version.bundle} Reference Documentation</doctitle>
                <bottom><![CDATA[
                            <font size="-2">QtJambi Reference Documentation<br>
                            The documentation provided herein is licensed under the terms of the 
                            <a href="https://www.gnu.org/licenses/fdl.html">GNU Free Documentation License version 1.3</a>
                            as published by the Free Software Foundation. 
                            Qt and respective logos are trademarks of The Qt Company Ltd. in Finland and/or other countries worldwide. 
                            All other trademarks are property of their respective owners.
                            </font>
                        ]]></bottom>
            </javadoc>
        </else>
    </if>
    <echo>${deploymentdir}/qtjambi-${qtjambi.soname.version.major}.${qtjambi.soname.version.minor}-javadocs.zip</echo>
    <delete file="${deploymentdir}/qtjambi-${qtjambi.soname.version.major}.${qtjambi.soname.version.minor}-javadocs.zip"/>
    <zip destfile="${deploymentdir}/qtjambi-${qtjambi.soname.version.major}.${qtjambi.soname.version.minor}-javadocs.zip">
        <fileset dir="${outputDir}/javadocs"/>
    </zip>
  </target>
</project>
