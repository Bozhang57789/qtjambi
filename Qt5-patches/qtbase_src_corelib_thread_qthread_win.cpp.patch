*** qtbase/src/corelib/thread/qthread_win.cpp	2018-11-25 12:51:10.000000000 +0100
--- qtbase/src/corelib/thread/qthread_win.cpp	2018-12-17 16:48:09.865278700 +0100
***************
*** 123,128 ****
--- 123,139 ----
      qt_create_tls();
      QThreadData *threadData = reinterpret_cast<QThreadData *>(TlsGetValue(qt_current_thread_data_tls_index));
      if (!threadData && createIfNecessary) {
+ /** recovered from Qt4 for QtJambi5 **/
+         QThread *adopted = 0;
+         if (QInternal::activateCallbacks(QInternal::AdoptCurrentThread, (void **) &adopted)) {
+             Q_ASSERT(adopted);
+             threadData = QThreadData::get2(adopted);
+             TlsSetValue(qt_current_thread_data_tls_index, threadData);
+             adopted->d_func()->running = true;
+             adopted->d_func()->finished = false;
+             static_cast<QAdoptedThread *>(adopted)->init();
+         } else {
+ /** end */
          threadData = new QThreadData;
          // This needs to be called prior to new AdoptedThread() to
          // avoid recursion.
***************
*** 136,141 ****
--- 147,155 ----
              QT_RETHROW;
          }
          threadData->deref();
+ /** recovered from Qt4 for QtJambi5 **/
+         }
+ /** end */
          threadData->isAdopted = true;
          threadData->threadId.store(reinterpret_cast<Qt::HANDLE>(quintptr(GetCurrentThreadId())));
  
