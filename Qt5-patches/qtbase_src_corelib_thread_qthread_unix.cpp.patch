*** qtbase/src/corelib/thread/qthread_unix.cpp	Thu Sep 13 03:25:10 2018
--- qtbase/src/corelib/thread/qthread_unix.cpp	Mon Dec 17 16:47:07 2018
***************
*** 238,243 ****
--- 238,255 ----
  {
      QThreadData *data = get_thread_data();
      if (!data && createIfNecessary) {
+ /** recovered from Qt4 for QtJambi5 **/
+         void *a;
+         if (QInternal::activateCallbacks(QInternal::AdoptCurrentThread, &a)) {
+             QThread *adopted = static_cast<QThread*>(a);
+             Q_ASSERT(adopted);
+             data = QThreadData::get2(adopted);
+             set_thread_data(data);
+             adopted->d_func()->running = true;
+             adopted->d_func()->finished = false;
+             static_cast<QAdoptedThread *>(adopted)->init();
+         } else {
+ /** end */
          data = new QThreadData;
          QT_TRY {
              set_thread_data(data);
***************
*** 249,254 ****
--- 261,269 ----
              QT_RETHROW;
          }
          data->deref();
+ /** recovered from Qt4 for QtJambi5 **/
+         }
+ /** end */
          data->isAdopted = true;
          data->threadId.store(to_HANDLE(pthread_self()));
          if (!QCoreApplicationPrivate::theMainThread)
