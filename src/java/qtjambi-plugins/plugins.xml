<project default="build">
    <target name="build">
        <property name="qtjambi.jar.version" value="${qtjambi.soname.version.major}.${qtjambi.soname.version.minor}"/>
        <if>
            <istrue value="${qtjambi.testbuild}"/>
            <then>
                <subant target="build" inheritall="true" verbose="true">
                    <filelist dir="${basedir}/src/java/qtjambi-plugins" files="customwidgets"/>
                </subant>
            </then>
            <else>
                <subant target="build" inheritall="true" verbose="true">
                    <filelist dir="${basedir}/src/java/qtjambi-plugins" files="deployer,qsqljdbc,multimediawidgets,helpwidgets"/>
                </subant>
            </else>
        </if>
    </target>
    <target name="bundle-plugins">
        <property name="qtjambi.jar.version" value="${qtjambi.soname.version.major}.${qtjambi.soname.version.minor}"/>
        <!--subant target="bundle-plugin" inheritall="true" verbose="true">
            <filelist dir="${basedir}/src/java/qtjambi-plugins" files="qsqljdbc,multimediawidgets,helpwidgets"/>
        </subant-->
    </target>
    <target name="bundle-tests">
        <property name="qtjambi.jar.version" value="${qtjambi.soname.version.major}.${qtjambi.soname.version.minor}"/>
        <!--subant target="bundle-plugin" inheritall="true" verbose="true">
            <filelist dir="${basedir}/src/java/qtjambi-plugins" files="customwidgets"/>
        </subant-->
    </target>
    <target name="bundle-plugin">
        <if>
            <istrue value="${qtjambi.testbuild}"/>
            <then>
                <if>
                    <equals arg1="${qtjambi.configuration}" arg2="debug_and_release" />
                    <then>
                        <antcall target="bundle-plugin-impl">
                            <param name="isdebug" value="true"/>
                            <param name="debug.conf" value="debug"/>
                            <param name="destdir" value="${outputDir}/tests/debug/plugins/${plugin-subdir}"/>
                        </antcall>
                        <antcall target="bundle-plugin-impl">
                            <param name="debug.conf" value="release"/>
                            <param name="destdir" value="${outputDir}/tests/release/plugins/${plugin-subdir}"/>
                        </antcall>
                    </then>
                </if>
                <if>
                    <equals arg1="${qtjambi.configuration}" arg2="release" />
                    <then>
                        <antcall target="bundle-plugin-impl">
                            <param name="isdebug" value="false"/>
                            <param name="debug.conf" value="release"/>
                            <param name="destdir" value="${outputDir}/tests/release/plugins/${plugin-subdir}"/>
                        </antcall>
                    </then>
                </if>
                <if>
                    <equals arg1="${qtjambi.configuration}" arg2="test" />
                    <then>
                        <antcall target="bundle-plugin-impl">
                            <param name="isdebug" value="false"/>
                            <param name="debug.conf" value="release"/>
                            <param name="destdir" value="${outputDir}/tests/release/plugins/${plugin-subdir}"/>
                        </antcall>
                    </then>
                </if>
                <if>
                    <equals arg1="${qtjambi.configuration}" arg2="debug" />
                    <then>
                        <antcall target="bundle-plugin-impl">
                            <param name="isdebug" value="true"/>
                            <param name="debug.conf" value="debug"/>
                            <param name="destdir" value="${outputDir}/tests/debug/plugins/${plugin-subdir}"/>
                        </antcall>
                    </then>
                </if>
            </then>
            <else>
                <property name="destdir" value="${qtjambi.builddir}/plugins/${plugin-subdir}" />
                <if>
                    <equals arg1="${qtjambi.configuration}" arg2="debug_and_release" />
                    <then>
                        <antcall target="bundle-plugin-impl">
                            <param name="isdebug" value="true"/>
                            <param name="debug.conf" value="debug"/>
                        </antcall>
                        <antcall target="bundle-plugin-impl">
                            <param name="debug.conf" value="release"/>
                        </antcall>
                    </then>
                </if>
                <if>
                    <equals arg1="${qtjambi.configuration}" arg2="release" />
                    <then>
                        <antcall target="bundle-plugin-impl">
                            <param name="isdebug" value="false"/>
                            <param name="debug.conf" value="release"/>
                        </antcall>
                    </then>
                </if>
                <if>
                    <equals arg1="${qtjambi.configuration}" arg2="test" />
                    <then>
                        <antcall target="bundle-plugin-impl">
                            <param name="isdebug" value="false"/>
                            <param name="debug.conf" value="release"/>
                        </antcall>
                    </then>
                </if>
                <if>
                    <equals arg1="${qtjambi.configuration}" arg2="debug" />
                    <then>
                        <antcall target="bundle-plugin-impl">
                            <param name="isdebug" value="true"/>
                            <param name="debug.conf" value="debug"/>
                        </antcall>
                    </then>
                </if>
            </else>
        </if>
        <delete dir="${outputDir}/tmp"/>
    </target>
    <target name="bundle-plugin-impl">
        <mkdir dir="${destdir}"/>
        <if>
            <os family="mac"/>
            <then>
                <property name="XstartOnFirstThread" value="-XstartOnFirstThread" />
            </then>
            <else>
                <property name="XstartOnFirstThread" value="-Dx" />
            </else>
        </if>
        <if>
            <available file="${outputDir}/tmp/${module-name}.jar" type="file"/>
            <then>
                <pathconvert property="librarypath">
                    <path id="librarypath">
                        <pathelement location="${qtjambi.builddir}/lib/"/>
                        <pathelement location="${tools.qt.bindir}"/>
                        <pathelement location="${tools.qt.libdir}"/>
                    </path>
                </pathconvert>
                <!--  output="${outputDir}/plugindeployer-${platformjar.conf}-${plugin-subdir}-${module-name}.out" error="${outputDir}/plugindeployer-${platformjar.conf}-${plugin-subdir}-${module-name}.err" -->
                <java fork="true" classname="io.qt.qtjambi.plugindeployer.Main" failonerror="true">
                    <jvmarg value="-Djava.library.path=${librarypath}"/>
                    <!--jvmarg value="-Dio.qt.debug=${debug.conf}"/-->
                    <jvmarg value="${XstartOnFirstThread}"/>
                    <!--jvmarg value="-Xint"/>
                    <jvmarg value="-Xrs"/>
                    <jvmarg value="-Xcheck:jni"/-->
                    <arg value="--class-name=${class-name}" />
                    <arg value="--configuration=${debug.conf}" />
                    <arg value="--dir=${destdir}" />
                    <arg value="--class-path=${outputDir}/tmp/${module-name}.jar" />
                    <arg value="--meta-data=${meta-data}" />
                    <arg value="--plugin-library-location=${qtjambi.builddir}/lib/" />
                    <env key="DYLD_LIBRARY_PATH" value="${librarypath}" />
                    <classpath>
                        <pathelement location="${deploymentdir}/tools/qtjambi-plugindeployer-${qtjambi.jar.version}.jar"/>
                        <fileset dir="${deploymentdir}" includes="qtjambi-*${qtjambi.jar.version}.jar"/>
                    </classpath>
                </java>
                <if>
                    <and>
                        <os family="mac"/>
                        <istrue value="${qtjambi.testbuild}"/>
                    </and>
                    <then>
                        <install-name-tool dir="${destdir}" libname="${module-name}" debug="${isdebug}"/>
                    </then>
                </if>
            </then>
            <else>
                <echo>plugin not available: ${outputDir}/tmp/${module-name}.jar</echo>
            </else>
        </if>
    </target>
    <target name="jar_init">
        <fail message="'module' is not set!">
            <condition>
                <not>
                    <isset property="module"/>
                </not>
            </condition>
        </fail>
    </target>
    
    <target name="copy-resources">
        <mkdir dir="${java.outdir}/plugins/${module}"/>
        <copy todir="${java.outdir}/plugins/${module}" includeemptydirs="false">
            <fileset dir="${modulesrc}">
                <include name="**/*"/>
                <exclude name="**/.*"/>
                <exclude name="build.xml"/>
                <exclude name="**/*.java"/>
                <exclude name="**/*.jui"/>
                <exclude name="${jar.excludes}"/>
            </fileset>
        </copy>
    </target>

    <target name="copy-src-resources">
        <mkdir dir="${java.outsrcdir}/plugins/${module}"/>
        <copy todir="${java.outsrcdir}/plugins/${module}" includeemptydirs="false">
            <fileset dir="${modulesrc}">
                <include name="**/*"/>
                <exclude name="build.xml"/>
                <exclude name="${jar.excludes}"/>
            </fileset>
        </copy>
    </target>

    <target name="compile" depends="jar_init">
        <echo message="Compiling java classes: ${java.srcdir}/${module} excludes: ${module.excludes}"/>
        <mkdir dir="${deploymentdir}"/>
        <delete dir="${java.outdir}/plugins/${module}" failonerror="no"/>
        <mkdir dir="${java.outdir}/plugins/${module}"/>
        <antcall inheritrefs="true" target="copy-resources">
            <param name="modulesrc" value="${sourcedir}"/>
        </antcall>
        <if>
            <istrue value="${java.module.based}"/>
            <then>
                <javac source="${source.java.version}" target="${minimum.java.version}" debug="true" deprecation="true"
                        fork="true" memorymaximumsize="1024m" verbose="false"
                        includeantruntime="true"
                        excludes="${module.excludes}"
                        destdir="${java.outdir}/plugins/${module}">
                    <compilerarg value="-Xlint:deprecation" />
                    <compilerarg value="-Xlint:unchecked" />
                    <src path="${sourcedir}"/>
                    <modulepath refid="qtjambi.modulepath"/>
                </javac>
            </then>
            <else>
                <javac source="${source.java.version}" target="${minimum.java.version}" debug="true" deprecation="true"
                        fork="true" memorymaximumsize="1024m" verbose="false"
                        includeantruntime="true"
                        excludes="${module.excludes},module-info.java"
                        destdir="${java.outdir}/plugins/${module}">
                    <compilerarg value="-Xlint:deprecation" />
                    <compilerarg value="-Xlint:unchecked" />
                    <src path="${sourcedir}"/>
                    <classpath refid="qtjambi.modulepath"/>
                </javac>
            </else>
        </if>
    </target>

    <!-- Same as "compile" target but with 2 sourcedirs -->
    <target name="compile2" depends="jar_init">
        <echo message="Compiling java classes: ${sourcedir}, ${sourcedir2} excludes: ${module.excludes}"/>
        <mkdir dir="${deploymentdir}"/>
        <delete dir="${java.outdir}/plugins/${module}" failonerror="no"/>
        <mkdir dir="${java.outdir}/plugins/${module}"/>
        <antcall inheritrefs="true" target="copy-resources">
            <param name="modulesrc" value="${sourcedir}"/>
        </antcall>
        <antcall inheritrefs="true" target="copy-resources">
            <param name="modulesrc" value="${sourcedir2}"/>
        </antcall>
        <if>
            <istrue value="${java.module.based}"/>
            <then>
                <javac source="${source.java.version}" target="${minimum.java.version}" debug="true" deprecation="true"
                        fork="true" memorymaximumsize="1024m" verbose="false"
                        includeantruntime="true"
                        excludes="${module.excludes}"
                        destdir="${java.outdir}/plugins/${module}">
                    <compilerarg value="-Xlint:deprecation" />
                    <compilerarg value="-Xlint:unchecked" />
                    <src path="${sourcedir}"/>
                    <src path="${sourcedir2}"/>
                    <!-- These are excluded due to the MacOSX port of Qt not needing this backward compatibility -->
                    <modulepath refid="qtjambi.modulepath"/>
                </javac>
            </then>
            <else>
                <javac source="${source.java.version}" target="${minimum.java.version}" debug="true" deprecation="true"
                        fork="true" memorymaximumsize="1024m" verbose="false"
                        includeantruntime="true"
                        excludes="${module.excludes},module-info.java"
                        destdir="${java.outdir}/plugins/${module}">
                    <compilerarg value="-Xlint:deprecation" />
                    <compilerarg value="-Xlint:unchecked" />
                    <src path="${sourcedir}"/>
                    <src path="${sourcedir2}"/>
                    <!-- These are excluded due to the MacOSX port of Qt not needing this backward compatibility -->
                    <classpath refid="qtjambi.modulepath"/>
                </javac>
            </else>
        </if>
    </target>

    <!-- Same as "compile" target but with 3 sourcedirs -->
    <target name="compile3" depends="jar_init">
        <echo message="Compiling java classes: ${java.srcdir}/${module} excludes: ${module.excludes}"/>
        <mkdir dir="${deploymentdir}"/>
        <delete dir="${java.outdir}/plugins/${module}" failonerror="no"/>
        <mkdir dir="${java.outdir}/plugins/${module}"/>
        <antcall inheritrefs="true" target="copy-resources">
            <param name="modulesrc" value="${sourcedir}"/>
        </antcall>
        <antcall inheritrefs="true" target="copy-resources">
            <param name="modulesrc" value="${sourcedir2}"/>
        </antcall>
        <antcall inheritrefs="true" target="copy-resources">
            <param name="modulesrc" value="${sourcedir3}"/>
        </antcall>
        <if>
            <istrue value="${java.module.based}"/>
            <then>
                <javac source="${source.java.version}" target="${minimum.java.version}" debug="true" deprecation="true"
                        fork="true" memorymaximumsize="1024m" verbose="false"
                        includeantruntime="true"
                        excludes="${module.excludes}"
                        destdir="${java.outdir}/plugins/${module}">
                    <compilerarg value="-Xlint:deprecation" />
                    <compilerarg value="-Xlint:unchecked" />
                    <compilerarg value="-Xlint:-module" />
                    <src path="${sourcedir}"/>
                    <src path="${sourcedir2}"/>
                    <src path="${sourcedir3}"/>
                    <!-- These are excluded due to the MacOSX port of Qt not needing this backward compatibility -->
                    <modulepath refid="qtjambi.modulepath"/>
                </javac>
            </then>
            <else>
                <javac source="${source.java.version}" target="${minimum.java.version}" debug="true" deprecation="true"
                        fork="true" memorymaximumsize="1024m" verbose="false"
                        includeantruntime="true"
                        excludes="${module.excludes},module-info.java"
                        destdir="${java.outdir}/plugins/${module}">
                    <compilerarg value="-Xlint:deprecation" />
                    <compilerarg value="-Xlint:unchecked" />
                    <src path="${sourcedir}"/>
                    <src path="${sourcedir2}"/>
                    <src path="${sourcedir3}"/>
                    <!-- These are excluded due to the MacOSX port of Qt not needing this backward compatibility -->
                    <classpath refid="qtjambi.modulepath"/>
                </javac>
            </else>
        </if>
    </target>

    <target name="createjar1" depends="compile,createjar">
    </target>
    <target name="createjar2" depends="compile2,createjar">
    </target>
    <target name="createjar3" depends="compile3,createjar">
    </target>
    
    <target name="createjar" depends="jar_init">
        <echo message="Creating JAR file for ${module}"/>
        <delete file="${outputDir}/tmp/${module}.jar" verbose="true"/>
        <mkdir dir="${outputDir}/tmp"/>
        <jar destfile="${outputDir}/tmp/${module}.jar" excludes="${jar.excludes}">
            <manifest>
                <attribute name="Built-By"                value="${user.name} - ${TODAY}"/>
<!--                <attribute name="Bundle-Activator"       value="io.qt.qtjambi.${qtjambi.osplatform}.${qtjambi.configuration}.osgi.Activator"/> -->
                <attribute name="Bundle-Description"      value="QtJambi Plugin"/>
                <!-- TODO: qtjambi.png -->
                <!-- <attribute name="Bundle-Icon"             value="qtjambi.png"/> -->
                <attribute name="Bundle-License"          value="GNU LESSER GENERAL PUBLIC LICENSE Version 2.1 February 1999 with Nokia Qt LGPL Exception version 1.0"/>
<!--                <attribute name="Bundle-Localization"    value="plugin"/> -->
                <attribute name="Bundle-ManifestVersion"  value="2"/>
                <attribute name="Bundle-Name"             value="QtJambi Plugin"/>
                <attribute name="Bundle-RequiredExecutionEnvironment" value="${minimum.java.version}"/>
                <attribute name="Bundle-SymbolicName"     value="io.qt.qtjambi.${qtjambi.osname}${qtjambi.configuration.osgi};singleton:=true"/>
                <attribute name="Bundle-Version"          value="${qtjambi.version.bundle}"/>
                <attribute name="Require-Capability"      value="gui.ws.qtjambi.native;filter:=&quot;(&amp;(osplatform=${qtjambi.osplatform})(oscpu=${qtjambi.oscpu})(compiler=${qtjambi.compiler})(configuration=release))&quot;"/>
                <attribute name="Require-Bundle"          value="io.qt.qtjambi.native.${qtjambi.osplatform}.${qtjambi.oscpu}.${qtjambi.compiler}${qtjambi.configuration.osgi};version=${qtjambi.version.bundle}"/>
            </manifest>
            <fileset dir="${java.outdir}/plugins/${module}"/>
        </jar>
    </target>
</project>
